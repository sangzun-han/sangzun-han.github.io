{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/자바스크립트/28.Number/",
    "result": {"data":{"cur":{"id":"ccc3a5ed-15f9-5eb8-baa2-2ceabf86f102","html":"<h1 id=\"1-number-생성자-함수\" style=\"position:relative;\"><a href=\"#1-number-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\" aria-label=\"1 number 생성자 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Number 생성자 함수</h1>\n<p>표준 빌트인 객체인 Number 객체는 생성자 함수 객체다. 따라서 new 연산자와 함께 Number 인스턴스를 생성할 수 있다.</p>\n<p>Number 생성자 함수에 인수를 전달하지 않고 new 연산자와 함께 호출하면 [[NumberData]] 내부슬롯에 0을 할당한 Number 래퍼 객체를 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const numObj = new Number();\r\nconsole.log(numObj); // Number {0}</code></pre></div>\n<p>Number 생성자 함수에 숫자가 아닌 값을 전달하면 강제로 숫자로 변환하고 숫자로 변환할 수 없다면 NaN을 내부슬롯에 할당한 Number 래퍼 객체를 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Number('0'); // 0\r\nNumber('10.53'); // 10.53\r\nNumber(true); // 1\r\nNumber('aaa'); // NaN</code></pre></div>\n<h1 id=\"2-number-프로퍼티\" style=\"position:relative;\"><a href=\"#2-number-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"2 number 프로퍼티 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Number 프로퍼티</h1>\n<ul>\n<li><code class=\"language-text\">Number.EPSILON</code>: EPSILON은 1과 1보다 큰 숫자 중에서 가장 작은 숫자와의 차이와 같다.\r\nEPSILON은 부동소수점으로 인해 발생하는 오차를 해결하기 위해 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0.1 + 0.2; // 0.30000000000000004\r\n0.1 + 0.2 === 0.3 // false\r\n\r\nfunction isEqual(a,b) {\r\n  return Math.abs(a-b) &lt; Number.EPSILON;\r\n}\r\n\r\nisEqual(0.1+0.2, 0.3); // true</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Number.MAX_VALUE</code> : 자바스크립트에서 표현할 수 있는 가장 큰 양수값</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Infinity > Number.MAX_VALUE // ture</code></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">Number.MIN_VALUE</code> : 자바스크립트에서 표현할 수 있는 가장 작은 양수값</p>\n</li>\n<li>\n<p><code class=\"language-text\">Number.MAX* SAFE* INTEGER</code> : 자바스크립트에서 안전하게 표현할 수 있는 가장 큰 정수값</p>\n</li>\n<li>\n<p><code class=\"language-text\">Number.MIN* SAFE* INTEGER</code> : 자바스크립트에서 안전하게 표현할 수 있는 가장 작은 정수값</p>\n</li>\n<li>\n<p><code class=\"language-text\">Number.POSITIVE_INFINITY</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">Number.NEGATIVE_INFINITY</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">Number.NaN</code></p>\n</li>\n</ul>\n<h1 id=\"3-number-메서드\" style=\"position:relative;\"><a href=\"#3-number-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"3 number 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Number 메서드</h1>\n<ul>\n<li>\n<p><code class=\"language-text\">Number.isFinite</code> : 인수로 전달된 값이 유한수라면 true 아니라면 false 빌트인 전역함수 isFinite와는 차이가 있다.\r\n전역함수 isFinite는 전달받은 인수를 숫자로 암묵적 타입 변환하여 검사를 수행하지만 Number.isFinite는 전달받은 인수를 숫자로 암묵적 타입 변환 하지 않는다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">Number.isNaN</code> : 암묵적 타입변환 하지 않는다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">Number.isSafeInter</code> : 암묵적 타입변환 하지 않는다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">Number.prototype.toExponetial</code> : 숫자를 지수 표기법으로 변환하여 문자열로 반환한다. <strong><em>숫자 리터럴과 함께 사용할 경우 에러가 발생한다.</em></strong></p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">77.toExpoential(); // Syntax Error\r\n(77).toExpoential(); // 7.7e+1\r\n77 .toExpoential(); // 7.7e+1</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Number.prototype.toFixed</code> : 숫자를 반올림하여 문자열로 반환한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(123456.789).toFixed(); // 123457\r\n(123456.789).toFixed(1); // 소수점 이하 1자리까지 유효, 나머지 반올림123456.8</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Number.prototype.toPrecision()</code> : 인수로 전달받은 전체자릿수까지 유효하도록 나머지 자릿수를 반올림하여 문자열로 반환한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(12345.6789).toPrecision(); // 12345.6789\r\n(12345.6789).toPrecision(1); // 전체 1자릿수 유효, 나머지 반올림 1e+4</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Number.prototype.toString()</code> : 숫자를 문자열로 반환한다. 진법을 나타내는 2~36사이의 정수값을 인자로 전달할 수 있다.</li>\n</ul>","excerpt":"1. Number 생성자 함수 표준 빌트인 객체인 Number 객체는 생성자 함수 객체다. 따라서 new 연산자와 함께 Number 인스턴스를 생성할 수 있다. Number 생성자 함수에 인수를 전달하지 않고 new 연산자와 함께 호출하면 [[NumberData]] 내부슬롯에 0을 할당한 Number 래퍼 객체를 생성한다. Number 생성자 함수에 숫자가 아닌 값을 전달하면 강제로 숫자로 변환하고 숫자로 변환할 수 없다면 NaN을 내부슬롯에 할당한 Number 래퍼 객체를 생성한다. 2. Number 프로퍼티 : EPSILON은 1과 1보다 큰 숫자 중에서 가장 작은 숫자와의 차이와 같다.\r\nEPSILON은 부동소수점으로 인해 발생하는 오차를 해결하기 위해 사용한다.  : 자바스크립트에서 표현할 수 있는 가장 큰 양수값  : 자바스크립트에서 표현할 수 있는 가장 작은 양수값  : 자바스크립트에서 안전하게 표현할 수 있는 가장 큰 정수값  : 자바스크립트에서 안전하게 표현할 수 있…","frontmatter":{"date":"December 24, 2021","title":"28. Number","categories":"javascript","author":"sangzun","emoji":null},"fields":{"slug":"/자바스크립트/28.Number/"}},"next":{"id":"d5cb431c-e18b-5032-a399-aa1d7159d614","html":"<h1 id=\"1-배열\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EC%97%B4\" aria-label=\"1 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배열</h1>\n<p>배열은 여러 개의 값을 순차적으로 나열한 자료구조이다. 배열은 인덱스와 length 프로퍼티를 갖기 때문에 for문을 통해 순차적으로 접근할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const arr = ['a','b','c'];\r\nfor (let i=0; i &lt; arr.length; i++) {\r\n  console.log(arr[i])\r\n}</code></pre></div>\n<p>배열은 객체 타입이다. 배열 리터럴, Array 생성자 함수, Array.of, Array.from 메서드로 생성할 수 있다.</p>\n<h1 id=\"2-자바스크립트의-배열\" style=\"position:relative;\"><a href=\"#2-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%98-%EB%B0%B0%EC%97%B4\" aria-label=\"2 자바스크립트의 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 자바스크립트의 배열</h1>\n<p>자바스크립트의 배열은 배열의 요소를 위한 각각의 메모리 공간은 동일한 크기를 갖지 않아도 되며, 연속적으로 이어져 있지 않을 수도 있다. 즉 <strong><em>희소 행렬(sparse array)이다.</em></strong></p>\n<ul>\n<li>자바스크립트 배열은 해시 테이블로 구현된 객체이므로 인덱스로 요소에 접근하는 경우 일반적인 배열보다 성능적인 면에서 느린 구조적인 단점이 있다. 하지만 특정 요소를 검색하거나 삽입,삭제하는 경우에는 일반적인 배열보다 빠른 성능을 기대할 수 있다.</li>\n</ul>\n<h1 id=\"3-length프로퍼티-희소행렬\" style=\"position:relative;\"><a href=\"#3-length%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%ED%9D%AC%EC%86%8C%ED%96%89%EB%A0%AC\" aria-label=\"3 length프로퍼티 희소행렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. length프로퍼티, 희소행렬</h1>\n<p>length 프로퍼티 값은 배열의 길이를 바탕으로 결정되지만 임의의 숫자 값을 명시적으로 할당할 수 도 있다.</p>\n<p>현재 length 프로퍼티 값보다 작은 숫자 값을 할당하면 배열의 길이가 줄어든다.</p>\n<p>현재 length 프로퍼티 값보다 큰 값을 할당하면 값은 변경되지만 배열의 길이가 늘어나지는 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const arr = [1,2,3,4,5];\r\n\r\narr.length = 3;\r\n\r\nconsole.log(arr); // [1,2,3]</code></pre></div>\n<p><strong><em>희소배열은 legnth와 배열 요소의 개수가 일치하지 않는다. 희소 배열의 legnth는 희소 배열의 실제 요소개수보다 언제나 크다.</em></strong></p>\n<p>배열을 생성할 때는 희소 배열을 생성하지 않도록 주의해야한다.</p>\n<h1 id=\"4-배열-생성\" style=\"position:relative;\"><a href=\"#4-%EB%B0%B0%EC%97%B4-%EC%83%9D%EC%84%B1\" aria-label=\"4 배열 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 배열 생성</h1>\n<h3 id=\"4-1-배열리터럴\" style=\"position:relative;\"><a href=\"#4-1-%EB%B0%B0%EC%97%B4%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"4 1 배열리터럴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-1. 배열리터럴</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const arr = [1,2,3];</code></pre></div>\n<h3 id=\"4-2-array-생성자-함수\" style=\"position:relative;\"><a href=\"#4-2-array-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\" aria-label=\"4 2 array 생성자 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-2. Array 생성자 함수</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const arr = new Array(10);</code></pre></div>\n<p>이 때 생성된 배열은 희소 배열이다. length프로퍼티 값은 0이 아니지만 실제로 배열의 요소는 존재하지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">new Array(1,2,3); // [1,2,3]\r\n\r\nArray(1,2,3); // [1,2,3]</code></pre></div>\n<h3 id=\"4-3-arrayof\" style=\"position:relative;\"><a href=\"#4-3-arrayof\" aria-label=\"4 3 arrayof permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-3. Array.of</h3>\n<p>ES6에서 도입된 Array.of 메서드는 전달된 인수를 요소로 갖는 배열을 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Array.of(1); // [1]\r\nArray.of('string') // ['string']</code></pre></div>\n<h3 id=\"4-4-arrayfrom\" style=\"position:relative;\"><a href=\"#4-4-arrayfrom\" aria-label=\"4 4 arrayfrom permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-4. Array.from</h3>\n<p>ES6에서 도입된 Array.from 메서드는 유사배열객체(array-like-object) 또는 이터러블 객체(iterable object)를 인수로 전달받아 배열러 변환하여 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Array.from({length: 2, 0: 'a', 1: 'b'}) //['a','b'];\r\nArray.from('Hello') // ['H','e','l','l','o']</code></pre></div>\n<h1 id=\"5-배열-요소-추가-갱신-삭제\" style=\"position:relative;\"><a href=\"#5-%EB%B0%B0%EC%97%B4-%EC%9A%94%EC%86%8C-%EC%B6%94%EA%B0%80-%EA%B0%B1%EC%8B%A0-%EC%82%AD%EC%A0%9C\" aria-label=\"5 배열 요소 추가 갱신 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 배열 요소 추가 갱신 삭제</h1>\n<p>배열에도 요소를 동적으로 추가할 수 있다.</p>\n<p>만약 현재 배열의 length프로퍼티 값보다 큰 인덱스로 새로운 요소를 추가하면 희소배열이 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const arr =[0];\r\narr[100] = 100;\r\nconsole.log(arr); // (101) [0, empty × 99, 100]</code></pre></div>\n<p>배열은 객체이기 때문에 delete 연산자를 사용할 수 있다. delete 연산자는 객체의 프로퍼티를 삭제한다. 따라서 배열에서 delete 연산자를 사용할 경우 희소배열을 만들 수 있다.</p>\n<p>따라서 희소배열을 만들지 않기 위해 Array.prototype.splice 메서드를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const arr = [1,2,3];\r\n\r\narr.splice(1,1) // arr[1]부터 1개의 요소 삭제\r\nconsole.log(arr) // [1,3]</code></pre></div>\n<h1 id=\"6-배열-메서드\" style=\"position:relative;\"><a href=\"#6-%EB%B0%B0%EC%97%B4-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"6 배열 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 배열 메서드</h1>\n<p>배열에는 원본배열을 직접 변경하는 메서드(mutator method)와 원본배열을 변경하지 않고 새로운 배열을 생성하여 반환하는 메서드(accessor method)가 있다.</p>\n<ul>\n<li><code class=\"language-text\">Array.isArray</code> : 전달된 인수가 Array이면 true 아니면 false</li>\n<li><code class=\"language-text\">Array.prototype.indexOf</code> : 원본배열에서 인수로 전달된 요소를 검색하여 인덱스를 반환</li>\n<li><code class=\"language-text\">Array.prototype.push</code> : 인수로 전달받은 모든값을 원본배열의 마지막 요소로 추가하고 length 프로퍼티 값을 반환한다.</li>\n<li><code class=\"language-text\">Array.prototype.pop</code> : 원본배열에서 마지막 요소를 제거하고 제거한 요소를 반환한다.</li>\n<li><code class=\"language-text\">Array.prototype.unshift</code> : 인수로 전달받은 모든 값을 원본 배열의 선두에 요소로 추가하고 length 프로퍼티 값을 반환한다.</li>\n<li><code class=\"language-text\">Array.prototype.shift</code> : 원본배열에서 첫번째 요소를 제거하고 제거한 요소를 반환한다.</li>\n<li><code class=\"language-text\">Array.prototype.concat</code> : 인수로 전달된 값들을 원본배열의 마지막 요소로 추가한 새로운 배열을 반환한다. 원본배열은 변경되지 않는다.</li>\n<li><code class=\"language-text\">Array.prototype.splice</code> : splice(start, deleteCount, items) start 인덱스부터 deleteCount만큼 원본배열에서 요소를 제거한다. 제거한 위치에 items를 원본배열에 삽입한다.</li>\n<li><code class=\"language-text\">Array.prototype.slice</code> : 인수로 전달된 범위의 요소들을 복사하여 배열로 반환한다. 원본배열은 변경되지 않는다.</li>\n<li><code class=\"language-text\">Array.prototype.join</code> : 원본 배열의 모든 요소를 문자열로 변환한 후 구분자로 연결한 문자열을 반환한다. 구분자는 생략가능하다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const arr = [1,2,3];\r\n\r\narr.join(); // '1,2,3,4';\r\narr.join(''); // '1234'</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Array.prototype.reverse</code> : 원본 배열의 순서를 반대로 뒤집는다.</li>\n<li><code class=\"language-text\">Array.prototype.fill</code> : 인수로 전달받은 값을 배열의 처음부터 끝까지 요소로 채운다. 원본 배열이 변경된다. 두번째 인수로 요소채우기를 시작할 인덱스를 전달 할 수 있고 세번째 인수로 요소 채우기를 멈출 인덱스를 전달 할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const arr = [1,2,3];\r\n\r\narr.fill('a');\r\nconsole.log(arr); // ['a','a','a']</code></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">Array.prototype.includes</code> : 배열 내에 특정 요소가 있다면 true 아니면 false 두번째 인수로 검색을 시작할 인덱스를 전달 할 수 있다. 음수를 전달하면 (length + index)를 검색 시작 인덱스로 설정한다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">Array.prototype.flat</code> : 인수로 전달한 깊이만큼 재귀적으로 배열을 평탄화 한다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[1,[2,3,4,5]].flat(); // [1,2,3,4,5];\r\n\r\n[1,[2,[3,[4]]]].flat(Infinity); // [1,2,3,4]</code></pre></div>\n<h1 id=\"7-배열-고차함수\" style=\"position:relative;\"><a href=\"#7-%EB%B0%B0%EC%97%B4-%EA%B3%A0%EC%B0%A8%ED%95%A8%EC%88%98\" aria-label=\"7 배열 고차함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 배열 고차함수</h1>\n<p>고차함수는 함수를 인수로 전달받거나 함수를 반환하는 함수이다.</p>\n<ul>\n<li><code class=\"language-text\">Array.prototype.sort</code> : 배열의 요소를 정렬한다. 원본배열을 직접 변경하며 정렬된 배열을 반환한다.</li>\n</ul>\n<p>sort 메서드는 유니코드 코드 포인트의 순서를 따른다. 따라서 배열의 요소가 숫자타입이라면 주의가 필요하다.</p>\n<p>숫자 요소를 정렬할 때는 sort 메서드에 정렬 순서를 정의하는 비교 함수를 인수로 전달해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const arr = [40,100,1,5,2,25,10];\r\narr.sort((a,b) => a - b); // [1, 2, 5, 10, 25, 40, 100]</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Array.prototype.forEach</code> : 자신의 내부에서 반복문을 실행한다. forEach는 원본배열을 변경하지 않지만 콜백함수를 통해 원본 배열을 변경 할 수는 있다. forEach 메서드는 break, continue 문을 사용할 수 없다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const numbers = [1,2,3];\r\nconst pows = [];\r\n\r\nnumbers.forEach(item => pows.push(item ** 2));\r\nconsole.log(pows) // 1,4,9</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const numbers = [1,2,3];\r\n\r\nnumbers.forEach(item, index, arr) => {arr[index] = item ** 2}\r\n// 세번째 인자 arr는 원본배열을 가리킨다.\r\nconsole.log(numbers) // 1,4,9</code></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">Array.prototype.map</code> : 자신을 호출한 배열의 모든 요소를 순회하면서 인수로 전달받은 콜백함수를 반복 호출한다. 그리고 콜백 함수의 반환값들로 구성된 새로운 배열을 반환한다. <strong><em>원본 배열은 변경되지 않는다.</em></strong></p>\n</li>\n<li>\n<p><code class=\"language-text\">Array.prototype.filter</code> : 자신을 호출한 배열의 모든 요소를 순회하면서 인수로 전달받은 콜백함수를 반복 호출한다. 콜백 함수의 반환값이 true인 요소로만 구성된 새로운 배열을 반환한다. <strong><em>원본 배열은 변경되지 않는다.</em></strong></p>\n</li>\n<li>\n<p><code class=\"language-text\">Array.prototype.reduce</code> : 자신을 호출한 배열의 모든 요소를 순회하며 인수로 전달받은 콜백함수를 반복 호출한다. 콜백 함수의 반환값을 다음 순회시에 콜백함수의 첫번째 인수로 전달하면서 콜백 함수를 호출하여 하나의 결과값을 만들어 반환한다. <strong><em>원본 배열은 변경되지 않는다.</em></strong></p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const sum = [1,2,3,4].reduce((accumulator, currentValue, index, arr) => accumulator + currentValue , 0)\r\n\r\nconsole.log(sum) // 10</code></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">Array.prototype.some</code> : 자신을 호출한 배열의 모든 요소를 순회하며 인수로 전달받은 콜백함수를 반복 호출한다. 콜백 함수의 반환값이 단 한번이라도 참이라면 true 모두 거짓이면 false를 반환한다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">Array.prototype.every</code> : 자신을 호출한 배열의 모든 요소를 순회하며 인수로 전달받은 콜백함수를 반복 호출한다 콜백 함수의 반환값이 모두 참이라면 true 단 한번이라도 거짓이라면 false를 반환한다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">Array.prototype.find</code> : 자신을 호출한 배열의 모든 요소를 순회하면서 인수로 전달된 콜백 함수를 호출하여 반환값이 true인 첫번째 요소를 반환한다. 반환값이 true인 요소가 없다면 undefined를 반환한다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">Array.prototype.findIndex</code> : 자신을 호출한 배열의 모든 요소를 순회하면서 인수로 전달된 콜백 함수를 호출하여 반환값이 true인 첫번째 요소의 인덱스를 반환한다. 반환값이 true인 요소가 없다면 -1를 반환한다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">Array.prototype.flatMap</code> : map 메서드를 통해 생성된 새로운 배열을 평탄화 한다. 즉 map 메서드와 flat 메서드를 순차적으로 실행하는 효과가 있다. (ES10)</p>\n</li>\n</ul>","frontmatter":{"date":"December 21, 2021","title":"27. 배열","categories":"javascript","author":"sangzun","emoji":null},"fields":{"slug":"/자바스크립트/27.배열/"}},"prev":{"id":"9eda0804-0a0f-5581-89d3-147b87f39152","html":"<h1 id=\"1-math-프로퍼티\" style=\"position:relative;\"><a href=\"#1-math-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"1 math 프로퍼티 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Math 프로퍼티</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.PI // 3.141592653589793</code></pre></div>\n<h1 id=\"2-math-메서드\" style=\"position:relative;\"><a href=\"#2-math-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"2 math 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Math 메서드</h1>\n<ul>\n<li><code class=\"language-text\">Math.abs</code> : 인수로 전달된 숫자의 절대값을 반환 (절대값은 반드시 0또는 양수)</li>\n<li><code class=\"language-text\">Math.round</code>: 인수로 전달된 숫자의 소수점 이하를 반올림한 정수를 반환</li>\n<li><code class=\"language-text\">Math.floor</code> : 인수로 전달된 숫자의 소수점 이하를 내림한 정수를 반환</li>\n<li><code class=\"language-text\">Math.ceil</code> : 인수로 전달된 숫자의 소수점 이하를 올림한 정수를 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.ceil(1.4); // 2\r\nMath.ceil(-1.4); // -1\r\nMath.ceil(); // NaN</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Math.sqrt</code> : 인수로 전달된 숫자의 제곱근을 반환</li>\n<li><code class=\"language-text\">Math.random</code> : 임의의 난수(0이상 ~ 1미만)를 반환</li>\n<li><code class=\"language-text\">Math.pow</code> : 첫번째 인수를 밑으로 두번째 인수를 지수로 거듭제곱한 결과를 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.pow(2,8); // 256\r\nMath.pow(2); // NaN</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Math.max</code> : 전달받은 인수 중 가장 큰 수 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.max(1,2); // 1\r\nMath.max(); // -Infinity</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Math.min</code> : 전달받은 인수 중 가장 작은 수 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.min(1,2); // 1\r\nMath.min();// Infinity</code></pre></div>","frontmatter":{"date":"January 02, 2022","title":"29. Math","categories":"javascript","author":"sangzun","emoji":null},"fields":{"slug":"/자바스크립트/29.Math/"}},"site":{"siteMetadata":{"siteUrl":"https://github.com/sangzun-han","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/자바스크립트/28.Number/","nextSlug":"/자바스크립트/27.배열/","prevSlug":"/자바스크립트/29.Math/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}