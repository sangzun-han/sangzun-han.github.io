{"componentChunkName":"component---src-templates-blog-template-js","path":"/자바스크립트/07.연산자/","result":{"data":{"cur":{"id":"a60b7614-b3fd-5820-a945-6e2996711bdb","html":"<p>연산자(operator)는 하나 이상의 표현식을 대상으로 산술, 할당, 비교, 논리, 타입, 지수연산등을 수행하여 하나의 값을 만든다. 이때 연산의 대상을 피연산자(operand)라고 한다.</p>\n<p>피연산자는 ‘값’이라는 역할을 하며 연산자는 ‘피연산자를 연산하여 새로운 값을 만든다.’</p>\n<h1 id=\"1-산술-연산자\" style=\"position:relative;\"><a href=\"#1-%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"1 산술 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 산술 연산자</h1>\n<p>산술 연산자는 피연산자를 대상으로 수학적 계산을 수행해 새로운 숫자 값을 만든다. 산술연산이 불가능한 경우 <strong>NaN</strong>을 반환한다.</p>\n<h3 id=\"1-1-이항-산술-연산자\" style=\"position:relative;\"><a href=\"#1-1-%EC%9D%B4%ED%95%AD-%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"1 1 이항 산술 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-1. 이항 산술 연산자</h3>\n<p>모든 이항 산술 연산자는 피연산자의 값을 변경하는 <strong>부수효과(side effect)</strong>가 없다. 즉 피연산자의 값이 바뀌는 경우는 없고 언제나 새로운 값을 만들어 낸다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">5 + 2; // 7\n5 - 2; // 3\n5 * 2; // 10\n5 / 2; // 2.5\n5 % 2; // 1</code></pre></div>\n<h3 id=\"1-2-단항-산술-연산자\" style=\"position:relative;\"><a href=\"#1-2-%EB%8B%A8%ED%95%AD-%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"1 2 단항 산술 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-2. 단항 산술 연산자</h3>\n<p>단항 산술 연산자는 1개의 피연산자를 산술 연산하여 숫자 값을 만든다.\n증가/감소(++/—) 연산자는 피연산자의 값을 변경하는 부수효과가 있다.\n즉 증가/감소 연산을 하면 피연산자의 값을 변경하는 암묵적 할당이 이루어진다.</p>\n<p>숫자 타입이 아닌 피연산자에 + 단항 연산자를 사용하면 피연산자를 숫자 타입으로 반환하여 반환한다. 이 때 피연산자를 변경하는것은 아니고 숫자 타입으로 변환된 값을 생성해서 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var x = '1';\nconsole.log(+x); // 1\nconsole.log(x); // \"1\"\n\nvar x = true;\nconsole.log(+x) // 1\nconsole.log(x) // true</code></pre></div>\n<h3 id=\"1-3-문자열-연결-연산자\" style=\"position:relative;\"><a href=\"#1-3-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%97%B0%EA%B2%B0-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"1 3 문자열 연결 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1-3. 문자열 연결 연산자</h3>\n<ul>\n<li>연산자는 피연산자 중 하나 이상이 문자열인 경우 문자열 연결 연산자로 동작한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">'1' + 2; // '12'\n1 + '2'; // '12'\n\n1 + true; // 2</code></pre></div>\n<p>개발자의 의도와는 상관없이 자바스크립트 엔진에 의해 암묵적으로 타입이 자동 변환되기도 한다. 이를 <strong>암묵적 타입 변환(implicit coercion) 또는 타입 강제 변환(type coercion)</strong>이라고 한다 </p>\n<h1 id=\"2-할당-연산자\" style=\"position:relative;\"><a href=\"#2-%ED%95%A0%EB%8B%B9-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"2 할당 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 할당 연산자</h1>\n<p>할당 연산자는 우항에 있는 피연산자의 평가 결과를 좌항에 있는 변수에 할당한다. 따라서 부수효과가 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var x;\nx = 10;\nx += 5;\nx -= 5\n\nvar str = 'name is ';\nstr += 'Han';\nconsole.log(str) // 'name is Han'</code></pre></div>\n<p>일치비교(===)연산자는 좌항과 우항의 피연산자가 <strong>타입도 같고 값도 같은 경우에 true를 반환한다.</strong> 암묵적 타입 변환을 하지 않고 값을 비교한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">5 === 5; // true\n5 === '5'; // false</code></pre></div>\n<p>자바스크립트에서 숫자 0은 양의 0과 음의 0으로 나누어져 있다. 이들을 비교하면 true를 반환한다. 또한 동일한 값인 NaN가 NaN을 비교하면 다른 값이라고 평가한다.</p>\n<p>따라서 Object.is 메서드를 사용하면 정확한 비교 결과를 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">NaN === NaN // false\nObject.is(NaN, NaN) // true</code></pre></div>\n<p>NaN은 자신과 일치하지 않는 유일한 값이다 NaN을 조사하려면 <strong>isNaN</strong>함수를 사용해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">isNaN(NaN) // true\nisNaN(10) // false\nisNaN(1 + undefined) // true</code></pre></div>\n<h3 id=\"2-1-대소-관계-비교-연산자\" style=\"position:relative;\"><a href=\"#2-1-%EB%8C%80%EC%86%8C-%EA%B4%80%EA%B3%84-%EB%B9%84%EA%B5%90-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"2 1 대소 관계 비교 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-1. 대소 관계 비교 연산자</h3>\n<p>대소 관계 비교 연산자는 피연산자의 크기를 비교하여 boolean값을 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">5 > 0; // true\n5 > 5; // false\n5 >= 5; // true\n5 &lt;= 5; // true</code></pre></div>\n<h1 id=\"3-삼항-조건-연산자\" style=\"position:relative;\"><a href=\"#3-%EC%82%BC%ED%95%AD-%EC%A1%B0%EA%B1%B4-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"3 삼항 조건 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 삼항 조건 연산자</h1>\n<p>삼항 조건 연산자(ternary operator)는 조건식의 평가 결과에 따라 반환할 값을 결정한다.</p>\n<p><strong>조건식 ? 조건식이 true일때 반환할 값 : 조건식이 false일때 반환할 값</strong>\n만약 조건식의 평가 결과가 불리언 값이 아니면 불리언 값으로 암묵적 타입 변환된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var x = 2;\nvar result = x % 2 ? '홀수' : '짝수';\n// 2 % 2는 0이므로 false로 암묵적 타입 변환된다.\n\nconsole.log(result) // 짝수</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var x = 10;\n\nvar result = if(x % 2) {result = '홀수'} else {result = '짝수'}\n//SyntaxError</code></pre></div>\n<p><strong>삼항 조건 연산자 표현식은 값으로 평가할 수 있는 표현식인 문이다.</strong></p>\n<h1 id=\"4-논리-연산자\" style=\"position:relative;\"><a href=\"#4-%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"4 논리 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 논리 연산자</h1>\n<p>논리 연산자(logical operator)는 우항과 좌항의 피연산자를 논리 연산 한다.</p>\n<table>\n<thead>\n<tr>\n<th>논리 연산자</th>\n<th>의미</th>\n<th>부수효과</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>｜｜</td>\n<td>논리합(OR)</td>\n<td>X</td>\n</tr>\n<tr>\n<td>&#x26;&#x26;</td>\n<td>논리곱(AND)</td>\n<td>X</td>\n</tr>\n<tr>\n<td>!</td>\n<td>부정(NOT)</td>\n<td>X</td>\n</tr>\n</tbody>\n</table>\n<p>논리 부정 연산자는 언제나 boolean값을 반환한다. 단 피연산자가 반드시 boolean값일 필요는 없다. 피연산자가 boolean타입이 아니라면 암묵적 타입 변환된다.</p>\n<h1 id=\"5-쉼표-연산자\" style=\"position:relative;\"><a href=\"#5-%EC%89%BC%ED%91%9C-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"5 쉼표 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 쉼표 연산자</h1>\n<p>쉼표(,) 연산자는 왼쪽 피연산자부터 차례대로 피연산자를 평가하고 마지막 피연산자의 평가가 끝나면 마지막 피연산자의 평가 결과를 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var x,y,z;\nx = 1, y = 2, z = 3;</code></pre></div>\n<h1 id=\"6-그룹-연산자\" style=\"position:relative;\"><a href=\"#6-%EA%B7%B8%EB%A3%B9-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"6 그룹 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 그룹 연산자</h1>\n<p>소괄호 ()로 피연산자를 감싸는 그룹 연산자는 자신의 피연산자인 표현식을 가장 먼저 평가한다. 그룹 연산자는 연산자 우선순위가 가장 높다.</p>\n<h1 id=\"7-typeof-연산자\" style=\"position:relative;\"><a href=\"#7-typeof-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"7 typeof 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. typeof 연산자</h1>\n<p>typeof 연산자는 피연산자의 데이터 타입을 문자열로 반환한다. typeof 연산자는 7가지 문자열 <strong>‘string’, ‘number’, ‘boolean’, ‘undefined’, ‘symbol’, ‘object’, ‘function’</strong> 중 하나를 반환한다.</p>\n<p><strong>null을 반환하는 경우는 없다. 자바스크립트 첫번째 버전의 버그이지만 기존 코드에 영향을 줄 수 있기 때문에 수정을 하지 않는다.</strong></p>\n<p>null 타입인지 확인할때는 일치 연산자(===)을 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">typeof '' // String\ntypeof 1 // number\ntypeof NaN // number\ntypeof true // boolean\ntypeof undefiend // undefined\ntypeof Symbol() // symbol\ntypeof null // object\ntypeof [] // object\ntypeof {} // object\ntypeof new Date() // object\ntypeof /test/gi // object\ntypeof function(){} // function\n\nvar foo = null;\nfoo === null // true</code></pre></div>\n<h1 id=\"8-지수-연산자\" style=\"position:relative;\"><a href=\"#8-%EC%A7%80%EC%88%98-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"8 지수 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 지수 연산자</h1>\n<p>ES7에서 도입된 지수연산자는 좌항의 피연산자를 밑(base)로 우항의 피연산자를 지수(exponent)로 거듭 제곱하여 계산한다. 지수 연산자 이전에는 Math.pow 메서드를 사용했다.</p>\n<p>음수를 거듭제곱의 밑으로 사용하려면 괄호로 묶어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(-5) ** 2;</code></pre></div>\n<h1 id=\"9-연산자의-부수효과\" style=\"position:relative;\"><a href=\"#9-%EC%97%B0%EC%82%B0%EC%9E%90%EC%9D%98-%EB%B6%80%EC%88%98%ED%9A%A8%EA%B3%BC\" aria-label=\"9 연산자의 부수효과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. 연산자의 부수효과</h1>\n<p>대부분의 연산자는 다른 코드에 영향을 주지 않는다. 예를들어 2*3은 다른 코드에 어떠한 영향도 주지 않고 새로운 값 6을 생성한다. 하지만 일부 연산자는 다른 코드에 영향을 주는 부수 효과가 있다. ex) 할당연산자(=), 증가/감소 연산자(++/—), delete 연산자</p>\n<p><a href=\"https://velog.io/@hanminss/JS-Group-Study-07.%EC%97%B0%EC%82%B0%EC%9E%90\">study width</p>","excerpt":"연산자(operator)는 하나 이상의 표현식을 대상으로 산술, 할당, 비교, 논리, 타입, 지수연산등을 수행하여 하나의 값을 만든다. 이때 연산의 대상을 피연산자(operand)라고 한다. 피연산자는 ‘값’이라는 역할을 하며 연산자는 ‘피연산자를 연산하여 새로운 값을 만든다.’ 1. 산술 연산자 산술 연산자는 피연산자를 대상으로 수학적 계산을 수행해 새로운 숫자 값을 만든다. 산술연산이 불가능한 경우 NaN을 반환한다. 1-1. 이항 산술 연산자 모든 이항 산술 연산자는 피연산자의 값을 변경하는 부수효과(side effect)가 없다. 즉 피연산자의 값이 바뀌는 경우는 없고 언제나 새로운 값을 만들어 낸다. 1-2. 단항 산술 연산자 단항 산술 연산자는 1개의 피연산자를 산술 연산하여 숫자 값을 만든다.\n증가/감소(++/—) 연산자는 피연산자의 값을 변경하는 부수효과가 있다.\n즉 증가/감소 연산을 하면 피연산자의 값을 변경하는 암묵적 할당이 이루어진다. 숫자 타입이 아닌 피연산자…","frontmatter":{"date":"November 12, 2021","title":"07. 연산자","categories":"javascript","author":"sangzun","emoji":null},"fields":{"slug":"/자바스크립트/07.연산자/"}},"next":{"id":"9dd21e96-2ce1-55b2-9df8-76554309656c","html":"<p>데이터타입은 값의 종류를 말한다. 자바스크립트는 7개의 데이터 타입을 제공한다.\n7개의 데이터 타입은 원시타입(primitive type)입과 객체타입(object/reference type)으로 분류할 수 있다.</p>\n<h1 id=\"1-숫자-타입\" style=\"position:relative;\"><a href=\"#1-%EC%88%AB%EC%9E%90-%ED%83%80%EC%9E%85\" aria-label=\"1 숫자 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 숫자 타입</h1>\n<p>숫자 타입의 값은 모든 수를 실수로 처리하며 정수만 표현하기 위한 데이터 타입이 존재하지 않는다.</p>\n<p>정수, 실수, 2진수, 8진수, 16진수 리터럴은 모두 메모리에 배정밀도 64비트 부동소수점 형식의 2진수로 저장된다. 자바스크립트는 2진수, 8진수, 16진수를 표현하기 위한 데이터 타입을 제공하지 않기 때문에 이들 값을 참조하면 모두 10진수로 해석된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(1===1.0) // true</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(10 / 0) // Infinity\nconsole.log(10 /- 0) // -Infinity\nconsole.log(1 * 'String') // NaN</code></pre></div>\n<h1 id=\"2-문자열-타입\" style=\"position:relative;\"><a href=\"#2-%EB%AC%B8%EC%9E%90%EC%97%B4-%ED%83%80%EC%9E%85\" aria-label=\"2 문자열 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 문자열 타입</h1>\n<p>문자열 타입은 텍스트 데이터를 나타내는데 사용한다.\n문자열은  ”, \"\", <code class=\"language-text\"></code>으로 텍스트를 감싼다.\n다른타입의 값과 달리 문자열을 따옴표로 감싸는 이유는 키워드나 식별자 같은 토큰과 구분하기 위해서다. 만약 문자열을 따옴표로 감싸지 않으면 자바스크립트 엔진은 키워드나 식별자 같은 토큰으로 인식한다.</p>\n<h1 id=\"3-템플릿-리터럴\" style=\"position:relative;\"><a href=\"#3-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"3 템플릿 리터럴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 템플릿 리터럴</h1>\n<p>ES6부터 템플릿 리터럴(template literal)이라고 하는 새로운 문자열 표기법이 도입되었다. 템플릿 리터럴은 멀티라인 문자열(multi-line string), 표현식 삽입(expresiion interpolation), 태그드 템플릿(tagged template)등 편리한 문자열 처리 기니을 제공한다. <code class=\"language-text\"></code>을 사용해 표현한다.</p>\n<h3 id=\"3-1-멀티라인-문자열\" style=\"position:relative;\"><a href=\"#3-1-%EB%A9%80%ED%8B%B0%EB%9D%BC%EC%9D%B8-%EB%AC%B8%EC%9E%90%EC%97%B4\" aria-label=\"3 1 멀티라인 문자열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3-1. 멀티라인 문자열</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var template = `Template literal`</code></pre></div>\n<h3 id=\"3-2-표현식-삽입\" style=\"position:relative;\"><a href=\"#3-2-%ED%91%9C%ED%98%84%EC%8B%9D-%EC%82%BD%EC%9E%85\" aria-label=\"3 2 표현식 삽입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3-2. 표현식 삽입</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var first = 'Ung-mo';\nvar last = 'Lee';\n\nconsole.log(`${first} ${last}`)' // Ung-mo Lee</code></pre></div>\n<p>표현식 삽입은 반드시 템플릿 리터럴 내에서 사용해야 한다. 템플릿 리터럴이 아닌 일반 문자열에서의 표현식 삽입은 문자열로 취급된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log('1 + 2 = ${1 + 2}') // 1 + 2 = ${1 + 2}</code></pre></div>\n<h1 id=\"4-불리언-타입\" style=\"position:relative;\"><a href=\"#4-%EB%B6%88%EB%A6%AC%EC%96%B8-%ED%83%80%EC%9E%85\" aria-label=\"4 불리언 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 불리언 타입</h1>\n<p>불리언 타입의 값은 논리적 참, 거짓을 나타내는 true, false뿐이다.</p>\n<h1 id=\"5-undefined-타입\" style=\"position:relative;\"><a href=\"#5-undefined-%ED%83%80%EC%9E%85\" aria-label=\"5 undefined 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. undefined 타입</h1>\n<p>undefined 타입의 값은 undefined가 유일하다. <strong>변수를 참조했을 때 undefined가 반환된다면 참조한 변수가 초기화 되지 않은 변수란것을 알 수 있다.</strong></p>\n<h3 id=\"선언declaration과-정의definition\" style=\"position:relative;\"><a href=\"#%EC%84%A0%EC%96%B8declaration%EA%B3%BC-%EC%A0%95%EC%9D%98definition\" aria-label=\"선언declaration과 정의definition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>선언(declaration)과 정의(definition)</h3>\n<p>undefined를 직역하면 ‘정의되지 않은’이다. 자바스크립트의 undefined은 변수에 값을 할당하여 변수의 실체를 명확히 하는것을 말한다.</p>\n<p>다른 프로그래밍 언어에서는 선언과 정의를 엄격하게 구분해서 사용하는 경우가 있지만 자바스크립트에서는 변수를 선언하면 암묵적으로 정의가 이루어지기 때문에 선언과 정의의 구분이 모호하다.</p>\n<h1 id=\"6-null-타입\" style=\"position:relative;\"><a href=\"#6-null-%ED%83%80%EC%9E%85\" aria-label=\"6 null 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. null 타입</h1>\n<p>null타입의 값은 null이 유일하다. <strong>null은 변수에 값이 없다는 것을 의도적으로 명시할때 사용한다.</strong></p>\n<p>변수에 null을 할당하는 것은 변수가 이전에 참조하던 값을 더 이상 참조하지 않겠다는 의미다.</p>\n<p>함수가 유효한 값을 반환할 수 없는 경우 명시적으로 null을 반환하기도 한다.</p>\n<h1 id=\"7-심벌-타입\" style=\"position:relative;\"><a href=\"#7-%EC%8B%AC%EB%B2%8C-%ED%83%80%EC%9E%85\" aria-label=\"7 심벌 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 심벌 타입</h1>\n<p>심벌(symbol)은 ES6에서 추가된 7번째 타입으로 변경 불가능한 원시 타입의 값이다.심벌 값은 다른 값과 중복 되지 않는 유일무이한 값이다.</p>\n<p>심벌은 Symbol 함수를 호출해 생성한다. 이때 생성된 심벌 값은 외부에 노출되지 않는다.</p>\n<h1 id=\"8-객체-타입\" style=\"position:relative;\"><a href=\"#8-%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85\" aria-label=\"8 객체 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 객체 타입</h1>\n<p>숫자, 문자열, 템플릿 리터럴, 불리언, undefined, null, symbol을 제외한 이외의 값들은 모두 객체 타입이다.</p>\n<h1 id=\"9-데이터-타입의-필요성\" style=\"position:relative;\"><a href=\"#9-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1\" aria-label=\"9 데이터 타입의 필요성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. 데이터 타입의 필요성</h1>\n<p>값은 메모리에 저장하고 참조할 수 있어야 한다. 메모리에 값을 저장하려면 먼저 확보해야할 메모리 공간의 크기를 결정해야 한다. 몇 바이트의 메모리 공간을 사용해야 낭비와 손실 없이 값을 저장할 수 있는지 알아야 한다.</p>\n<ul>\n<li>값을 저장할 때 확보해야 하는 메모리 공간의 크기를 결정하기 위해</li>\n<li>값을 참조할 때 한번에 읽어 들여야 할 메모리 공간의 크기를 결정하기 위해</li>\n<li>메모리에서 읽어 들인 2진수를 어떻게 해석할지 결정하기 위해</li>\n</ul>\n<h1 id=\"10-동적-타이핑\" style=\"position:relative;\"><a href=\"#10-%EB%8F%99%EC%A0%81-%ED%83%80%EC%9D%B4%ED%95%91\" aria-label=\"10 동적 타이핑 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. 동적 타이핑</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">char c; // 1바이트\nint num; // 4바이트</code></pre></div>\n<p>정적 타입 언어는 변수의 타입을 변경할 수 없으며 변수에 선언한 타입에 맞는 값만 할당 할 수 있다.\n자바스크립트는 정적 타입 언어와 다르게 변수를 선언할 때 타입을 선언하지 않는다.</p>\n<p>자바스크립트의 변수는선언이 아닌 할당에 의해 타입이 결정(타입 추론(type inference)) 된다.\n그리고 재할당에 의해 변수의 타입은 언제든지 동적으로 변할 수 있다. 이러한 특징을 <strong>동적 타이핑(dynamic typing)이라고 한다.</strong></p>\n<p><strong>변수는 타입을 갖지 않는다. 하지만 값은 타입을 갖는다.</strong></p>\n<h3 id=\"동적-타입-언어\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%A0%81-%ED%83%80%EC%9E%85-%EC%96%B8%EC%96%B4\" aria-label=\"동적 타입 언어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동적 타입 언어</h3>\n<p>동적 타입 언어는 구조적인 단점이 있다. 변수 값은 언제든지 변경될 수 있기 때문에 복잡한 프로그램에서는 변화하는 변수 값을 추적하기 어려울 수 있고\n변수의 타입이 고정되어 있지 않고 값의 변경에 의해 타입도 언제든지 변경될 수 있다.\n결국 <strong>동적 타입언어는 유연성(flexibility)은 높지만 신뢰성(reliability)은 떨어진다.</strong></p>","frontmatter":{"date":"November 11, 2021","title":"06. 데이터타입","categories":"javascript","author":"sangzun","emoji":null},"fields":{"slug":"/자바스크립트/06.데이터 타입/"}},"prev":{"id":"578f3370-5c06-5e2e-ba6e-625a711313d4","html":"<h1 id=\"1-블록문\" style=\"position:relative;\"><a href=\"#1-%EB%B8%94%EB%A1%9D%EB%AC%B8\" aria-label=\"1 블록문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 블록문</h1>\n<p>블록문(block statement)은 0개 이상의 문을 중괄호로 묶은 것으로, 코드 블록 또는 블록이라고 부르기도 한다. 자바스크립트는 블록문을 하나의 실행 단위로 취급한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  var foo = 10;\n}\n\nvar x = 1;\nif (x &lt; 10){\n  x++;\n}\n\nfunction sum(a,b) {\n  return a + b ;\n}</code></pre></div>\n<h1 id=\"2-조건문\" style=\"position:relative;\"><a href=\"#2-%EC%A1%B0%EA%B1%B4%EB%AC%B8\" aria-label=\"2 조건문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 조건문</h1>\n<p>조건문(conditional statement)는 주어진 조건식의 평가결과에 따라 코드 블록의 실행을 결정한다. 자바스크립트는 if else문과 switch문으로 두 가지 조건문을 제공한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">if (조건식) {\n\n} else if(조건식) {\n\n} else {\n\n}</code></pre></div>\n<p>if문의 조건식은 boolean값으로 평가되어야 한다. boolean값이 아닐경우 암묵적으로 boolean값으로 강제 변환되어 실행할 코드 블록을 결정한다.</p>\n<p>대부분의 if else문은 삼항 조건 연산자로 바꿔 쓸수 있다. 조건에 따라 값을 결정하여 변수에 할당하는 경우 if else 보다 삼항 조건 연산자를 사용하는 편이 가독성이 좋다. 하지만 조건에 따라 실행해야 할 내용이 복잡하여 여러 줄의 문이 필요하다면 if else문을 사용하는 편이 가독성이 좋다.</p>\n<p>switch문은 주어진 표현식을 평가하여 그 값과 일치하는 표현식을 갖는 case문으로 실행 흐름을 옮긴다. case문은 상황을 의미하는 표현식을 지정하고 콜론으로 마친다. 그리고 그 뒤로 실행할 문들을 위치 시킨다.</p>\n<p>switch문의 표현식과 일치하는 case문이 없다면 실행순서는 default로 옮긴다. default는 선택사항이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">switch (표현식) {\n  case 표현식1:\n    ~~~~\n    break;\n  case 표현식2:\n    ~~~~\n    break;\n  default:\n    ~~~\n}</code></pre></div>\n<p>switch문은 boolean값보다는 문자열이나 숫자값인 경우가 많다.</p>\n<h1 id=\"3-반복문\" style=\"position:relative;\"><a href=\"#3-%EB%B0%98%EB%B3%B5%EB%AC%B8\" aria-label=\"3 반복문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 반복문</h1>\n<p>반복문(loop statement)는 조건식의 평가 결과가 참인 경우 코드블록을 실행한다. 그후 조건식을 다시 평가하여 여전히 참인경우 코드 블록을 다시 실행한다. 조건식이 거짓이 될 때 까지 반복한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">자바스크립트는 forEach, for ...in, \nfor ...of문과 같이 반복문을 대체할 수 있는 기능을 제공한다.</code></pre></div>\n<p>for문의 변수 선언문, 조건식, 증감식은 모두 옵셥이므로 반드시 사용할 필요는 없다. 단 어떤 식도 선언하지 않으면 무한루프가 된다.</p>\n<p>while문은 주로 반복횟수가 불명확할때 사용한다. 조건식의 결과가 항상 참이면 무한루프가 된다. 무한루프를 탈출하기 위해서는 if문으로 탈출조건을 만들고 break문으로 코드 블록을 탈출한다.</p>\n<p>do…while문은 코드 블록을 먼저 실행하고 조건식을 평가한다. 즉 코드블록은 무조건 한번이상 실행된다.</p>\n<h1 id=\"4-break문\" style=\"position:relative;\"><a href=\"#4-break%EB%AC%B8\" aria-label=\"4 break문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. break문</h1>\n<p>break문은 코드 블록을 탈출한다. 레이블문, 반복문 또는 switch문의 코드 블록을 탈출한다. 이 외에 break를 사용하면 문법에러가 발생한다.</p>\n<p><strong>레이블문 (label statement)이란 식별자가 붙은 문을 말한다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">foo: console.log('foo');</code></pre></div>\n<p>레이불믄은 중첩된 for문 외부로 탈출할때 유용하지만 그 외의 경우에는 권장되지 않는다. 프로그램의 흐름이 복잡해져서 가독성이 나빠지고 오류를 발생시킬 가능성이 높아지기 때문이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">outer: for (var i=0; i&lt;3; i++) {\n  for (var j=0; j&lt;3 j++) {\n    if(i+j === 3) break outer;\n    console.log(`inner[${i},${j}`]);\n  }\n}</code></pre></div>\n<h1 id=\"5-continue문\" style=\"position:relative;\"><a href=\"#5-continue%EB%AC%B8\" aria-label=\"5 continue문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. continue문</h1>\n<p>continue문은 반복문의 코드 블록 실행을 현 지점에서 중단하고 반복문의 증감식으로 실행흐름을 이동시킨다. 반복문을 탈출하지 않는다.</p>\n<p>if문 내에서 실행해야 할 코드가 길다면 들여쓰기가 한단계 더 깊어지므로 continue문을 사용하는 편이 더 가독성이 좋다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">for (var i=0; i&lt;string.length; i++) {\n  if (string[i]!==search) continue;\n\n  count++;\n  ~~~\n  ~~~\n}</code></pre></div>","frontmatter":{"date":"November 13, 2021","title":"08. 제어문","categories":"javascript","author":"sangzun","emoji":null},"fields":{"slug":"/자바스크립트/08.제어문/"}},"site":{"siteMetadata":{"siteUrl":"https://github.com/sangzun-han","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/자바스크립트/07.연산자/","nextSlug":"/자바스크립트/06.데이터 타입/","prevSlug":"/자바스크립트/08.제어문/"}},"staticQueryHashes":["1073350324","2938748437"]}