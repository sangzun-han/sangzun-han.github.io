{"componentChunkName":"component---src-templates-blog-template-js","path":"/PROJECT/portfolio/","result":{"data":{"cur":{"id":"31a98a1f-98e6-5c09-b639-7ca685a5bd38","html":"<p>포트폴리오 페이지를 제작하기에 앞서 다른 사람들은 포토폴리오를 어떻게 만들었는지 찾아봤습니다. 자신의 소개글, skill등을 나열한 포트폴리오를 보면서 나는 나의 skill을 평가할 실력이 되는걸까 또 취업을 준비하는 입장에서 나는 나를 개발자라고 당당히 소개할 수 있는건가를 생객했습니다.</p>\n<p>그 결과 소개글, 프로필사진, skill같은것들은 과감히 빼버리고 <code class=\"language-text\">keyword</code> 를 잡고 나만의 포트폴리오를 제작하기로 했습니다.</p>\n<h1 id=\"키워드\" style=\"position:relative;\"><a href=\"#%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\"키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>키워드</h1>\n<ul>\n<li>‘나’를 나타낼 수 있는것</li>\n<li>웹 접근성</li>\n<li>SEO</li>\n</ul>","excerpt":"포트폴리오 페이지를 제작하기에 앞서 다른 사람들은 포토폴리오를 어떻게 만들었는지 찾아봤습니다. 자신의 소개글, skill등을 나열한 포트폴리오를 보면서 나는 나의 skill을 평가할 실력이 되는걸까 또 취업을 준비하는 입장에서 나는 나를 개발자라고 당당히 소개할 수 있는건가를 생객했습니다. 그 결과 소개글, 프로필사진, skill같은것들은 과감히 빼버리고  를 잡고 나만의 포트폴리오를 제작하기로 했습니다. 키워드 ‘나’를 나타낼 수 있는것 웹 접근성 SEO","frontmatter":{"date":"January 01, 2022","title":"포트폴리오","categories":"PROJECT","author":"sangzun","emoji":"🧢"},"fields":{"slug":"/PROJECT/portfolio/"}},"next":{"id":"2fb0f604-eaae-597b-85b3-0dbe66dd4422","html":"<h1 id=\"1-number-생성자-함수\" style=\"position:relative;\"><a href=\"#1-number-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\" aria-label=\"1 number 생성자 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Number 생성자 함수</h1>\n<p>표준 빌트인 객체인 Number 객체는 생성자 함수 객체다. 따라서 new 연산자와 함께 Number 인스턴스를 생성할 수 있다.</p>\n<p>Number 생성자 함수에 인수를 전달하지 않고 new 연산자와 함께 호출하면 [[NumberData]] 내부슬롯에 0을 할당한 Number 래퍼 객체를 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const numObj = new Number();\nconsole.log(numObj); // Number {0}</code></pre></div>\n<p>Number 생성자 함수에 숫자가 아닌 값을 전달하면 강제로 숫자로 변환하고 숫자로 변환할 수 없다면 NaN을 내부슬롯에 할당한 Number 래퍼 객체를 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Number('0'); // 0\nNumber('10.53'); // 10.53\nNumber(true); // 1\nNumber('aaa'); // NaN</code></pre></div>\n<h1 id=\"2-number-프로퍼티\" style=\"position:relative;\"><a href=\"#2-number-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"2 number 프로퍼티 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Number 프로퍼티</h1>\n<ul>\n<li><code class=\"language-text\">Number.EPSILON</code>: EPSILON은 1과 1보다 큰 숫자 중에서 가장 작은 숫자와의 차이와 같다.\nEPSILON은 부동소수점으로 인해 발생하는 오차를 해결하기 위해 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0.1 + 0.2; // 0.30000000000000004\n0.1 + 0.2 === 0.3 // false\n\nfunction isEqual(a,b) {\n  return Math.abs(a-b) &lt; Number.EPSILON;\n}\n\nisEqual(0.1+0.2, 0.3); // true</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Number.MAX_VALUE</code> : 자바스크립트에서 표현할 수 있는 가장 큰 양수값</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Infinity > Number.MAX_VALUE // ture</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Number.MIN_VALUE</code> : 자바스크립트에서 표현할 수 있는 가장 작은 양수값</li>\n<li><code class=\"language-text\">Number.MAX* SAFE* INTEGER</code> : 자바스크립트에서 안전하게 표현할 수 있는 가장 큰 정수값</li>\n<li><code class=\"language-text\">Number.MIN* SAFE* INTEGER</code> : 자바스크립트에서 안전하게 표현할 수 있는 가장 작은 정수값</li>\n<li><code class=\"language-text\">Number.POSITIVE_INFINITY</code></li>\n<li><code class=\"language-text\">Number.NEGATIVE_INFINITY</code></li>\n<li><code class=\"language-text\">Number.NaN</code></li>\n</ul>\n<h1 id=\"3-number-메서드\" style=\"position:relative;\"><a href=\"#3-number-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"3 number 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Number 메서드</h1>\n<ul>\n<li><code class=\"language-text\">Number.isFinite</code> : 인수로 전달된 값이 유한수라면 true 아니라면 false 빌트인 전역함수 isFinite와는 차이가 있다.\n전역함수 isFinite는 전달받은 인수를 숫자로 암묵적 타입 변환하여 검사를 수행하지만 Number.isFinite는 전달받은 인수를 숫자로 암묵적 타입 변환 하지 않는다.</li>\n<li><code class=\"language-text\">Number.isNaN</code> : 암묵적 타입변환 하지 않는다.</li>\n<li><code class=\"language-text\">Number.isSafeInter</code> : 암묵적 타입변환 하지 않는다.</li>\n<li><code class=\"language-text\">Number.prototype.toExponetial</code> : 숫자를 지수 표기법으로 변환하여 문자열로 반환한다. <strong><em>숫자 리터럴과 함께 사용할 경우 에러가 발생한다.</em></strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">77.toExpoential(); // Syntax Error\n(77).toExpoential(); // 7.7e+1\n77 .toExpoential(); // 7.7e+1</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Number.prototype.toFixed</code> : 숫자를 반올림하여 문자열로 반환한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(123456.789).toFixed(); // 123457\n(123456.789).toFixed(1); // 소수점 이하 1자리까지 유효, 나머지 반올림123456.8</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Number.prototype.toPrecision()</code> : 인수로 전달받은 전체자릿수까지 유효하도록 나머지 자릿수를 반올림하여 문자열로 반환한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(12345.6789).toPrecision(); // 12345.6789\n(12345.6789).toPrecision(1); // 전체 1자릿수 유효, 나머지 반올림 1e+4</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Number.prototype.toString()</code> : 숫자를 문자열로 반환한다. 진법을 나타내는 2~36사이의 정수값을 인자로 전달할 수 있다.</li>\n</ul>","frontmatter":{"date":"December 24, 2021","title":"28. Number","categories":"javascript","author":"sangzun","emoji":null},"fields":{"slug":"/자바스크립트/28.Number/"}},"prev":{"id":"6b8669ff-9847-5a44-b0c3-5ecfb236076b","html":"<h1 id=\"1-math-프로퍼티\" style=\"position:relative;\"><a href=\"#1-math-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"1 math 프로퍼티 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Math 프로퍼티</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.PI // 3.141592653589793</code></pre></div>\n<h1 id=\"2-math-메서드\" style=\"position:relative;\"><a href=\"#2-math-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"2 math 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Math 메서드</h1>\n<ul>\n<li><code class=\"language-text\">Math.abs</code> : 인수로 전달된 숫자의 절대값을 반환 (절대값은 반드시 0또는 양수)</li>\n<li><code class=\"language-text\">Math.round</code>: 인수로 전달된 숫자의 소수점 이하를 반올림한 정수를 반환</li>\n<li><code class=\"language-text\">Math.floor</code> : 인수로 전달된 숫자의 소수점 이하를 내림한 정수를 반환</li>\n<li><code class=\"language-text\">Math.ceil</code> : 인수로 전달된 숫자의 소수점 이하를 올림한 정수를 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.ceil(1.4); // 2\nMath.ceil(-1.4); // -1\nMath.ceil(); // NaN</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Math.sqrt</code> : 인수로 전달된 숫자의 제곱근을 반환</li>\n<li><code class=\"language-text\">Math.random</code> : 임의의 난수(0이상 ~ 1미만)를 반환</li>\n<li><code class=\"language-text\">Math.pow</code> : 첫번째 인수를 밑으로 두번째 인수를 지수로 거듭제곱한 결과를 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.pow(2,8); // 256\nMath.pow(2); // NaN</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Math.max</code> : 전달받은 인수 중 가장 큰 수 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.max(1,2); // 1\nMath.max(); // -Infinity</code></pre></div>\n<ul>\n<li><code class=\"language-text\">Math.min</code> : 전달받은 인수 중 가장 작은 수 반환</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Math.min(1,2); // 1\nMath.min();// Infinity</code></pre></div>","frontmatter":{"date":"January 02, 2022","title":"29. Math","categories":"javascript","author":"sangzun","emoji":null},"fields":{"slug":"/자바스크립트/29.Math/"}},"site":{"siteMetadata":{"siteUrl":"https://github.com/sangzun-han","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/PROJECT/portfolio/","nextSlug":"/자바스크립트/28.Number/","prevSlug":"/자바스크립트/29.Math/"}},"staticQueryHashes":["1073350324","2938748437"]}