{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/챌린지/clock/",
    "result": {"data":{"cur":{"id":"182f3f96-2f12-5f64-b8e3-3afe87286e70","html":"<h3 id=\"02-js-and-css-clock\" style=\"position:relative;\"><a href=\"#02-js-and-css-clock\" aria-label=\"02 js and css clock permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. Js and CSS Clock</h3>\n<ul>\n<li><code class=\"language-text\">transform-origin</code>을 설정하지 않으면 회전 중심은 가운데를 기준으로 한다.</li>\n<li>deg는 360이 최대값이므로 분,초는 60으로 나누고 시간은 12로 나누어서 360도를 곱해준다. 그리고 시계바늘이 12에서 시작하기 위해 90deg를 따로 설정했으므로 맞춰주기 위해 90도를 더해준다.</li>\n<li><code class=\"language-text\">transition-timingfunction</code>을 이용하면 transition 효과의 시간당 속도를 설정해줄수 있다.</li>\n</ul>\n<p>처음에는 초를 6도씩 회전시키고 360도가 되면 분을 6도 회전시키는 복잡한 방법을 생각했지만 setInterval을 이용해서\n계속해서 시간을 받아오고 그 시간의 각도를 계산하는 방법으로 구현했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n  &lt;head>\n    &lt;meta charset=\"UTF-8\" />\n    &lt;title>JS + CSS Clock&lt;/title>\n  &lt;/head>\n  &lt;body>\n    &lt;div class=\"clock\">\n      &lt;div class=\"clock-face\">\n        &lt;div class=\"hand hour-hand\">&lt;/div>\n        &lt;div class=\"hand min-hand\">&lt;/div>\n        &lt;div class=\"hand second-hand\">&lt;/div>\n      &lt;/div>\n    &lt;/div>\n\n    &lt;style>\n      html {\n        background: #018ded url(https://unsplash.it/1500/1000?image=881&amp;blur=5);\n        background-size: cover;\n        font-family: \"helvetica neue\";\n        text-align: center;\n        font-size: 10px;\n      }\n\n      body {\n        margin: 0;\n        font-size: 2rem;\n        display: flex;\n        flex: 1;\n        min-height: 100vh;\n        align-items: center;\n      }\n\n      .clock {\n        width: 30rem;\n        height: 30rem;\n        border: 20px solid white;\n        border-radius: 50%;\n        margin: 50px auto;\n        position: relative;\n        padding: 2rem;\n        box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.1), inset 0 0 0 3px #efefef,\n          inset 0 0 10px black, 0 0 10px rgba(0, 0, 0, 0.2);\n      }\n\n      .clock-face {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        transform: translateY(-3px);\n      }\n\n      .hand {\n        width: 50%;\n        height: 6px;\n        background: black;\n        position: absolute;\n        top: 50%;\n        transform-origin: 100%;\n        transform: rotate(90deg);\n        transition: all 0.05s;\n        transition-timing-function: cubic-bezier(0.1, 2.7, 0.58, 1);\n      }\n    &lt;/style>\n\n    &lt;script>\n      const hour = document.querySelector(\".hour-hand\");\n      const min = document.querySelector(\".min-hand\");\n      const second = document.querySelector(\".second-hand\");\n\n      function getDate() {\n        const now = new Date();\n        const hours = now.getHours();\n        const minutes = now.getMinutes();\n        const seconds = now.getSeconds();\n        second.style.transform = `rotate(${(seconds / 60) * 360 + 90}deg)`;\n        min.style.transform = `rotate(${(minutes / 60) * 360 + 90}deg)`;\n        hour.style.transform = `rotate(${(hours / 12) * 360 + 90}deg)`;\n      }\n\n      setInterval(getDate, 1000);\n    &lt;/script>\n  &lt;/body>\n&lt;/html>\n</code></pre></div>","excerpt":"02. Js and CSS Clock 을 설정하지 않으면 회전 중심은 가운데를 기준으로 한다. deg는 360이 최대값이므로 분,초는 60으로 나누고 시간은 12로 나누어서 360도를 곱해준다. 그리고 시계바늘이 12에서 시작하기 위해 90deg를 따로 설정했으므로 맞춰주기 위해 90도를 더해준다. 을 이용하면 transition 효과의 시간당 속도를 설정해줄수 있다. 처음에는 초를 6도씩 회전시키고 360도가 되면 분을 6도 회전시키는 복잡한 방법을 생각했지만 setInterval을 이용해서\n계속해서 시간을 받아오고 그 시간의 각도를 계산하는 방법으로 구현했다.","frontmatter":{"date":"June 08, 2022","title":"02. JavaScript Challenge","categories":"챌린지","author":"sangzun","emoji":"😂"},"fields":{"slug":"/챌린지/clock/"}},"next":{"id":"5a840c16-b138-5010-844d-f8e0795a2b47","html":"<p>라이브러리나 프레임워크 사용 없이 모던자바스크립트만으로 하루에 하나씩 30일동안 30가지 미니 프로젝트를 만드는 챌린지입니다. 프로젝트 아이디어를 떠올리기 어려워 주제와 디자인이 정해진 미니 프로젝트를 따라 만들어보는것으로 시작했습니다.</p>\n<h3 id=\"01-drum-kit\" style=\"position:relative;\"><a href=\"#01-drum-kit\" aria-label=\"01 drum kit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. drum-kit</h3>\n<ul>\n<li><code class=\"language-text\">keydown</code>이벤트를 이용해서 입력값을 받아서 정해진 오디오를 재상한다.</li>\n<li>오디오를 재생할 때 해당 키에 .playing 이라는 클래스를 추가해주고 오디오 재생이 끝나면 .playing클래스를 제거한다.</li>\n<li><code class=\"language-text\">transitionend</code>는 transition의 완료를 감지할 수 있는 이벤트이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const play = (event) => {\n  const audio = document.querySelector(`audio[data-key=\"${event.keyCode}\"]`);\n  const key = document.querySelector(`.key[data-key=\"${event.keyCode}\"]`);\n\n  if (!audio) return;\n  audio.currentTime = 0;\n  audio.play();\n  key.classList.add(\"playing\");\n};\n\nconst removeTransition = (event) => {\n  if (event.propertyName === \"transform\")\n    event.target.classList.remove(\"playing\");\n};\n\nconst pianoKeys = document.querySelectorAll(\".key\");\npianoKeys.forEach((el) =>\n  el.addEventListener(\"transitionend\", removeTransition)\n);\n\nwindow.addEventListener(\"keydown\", play);\n</code></pre></div>","frontmatter":{"date":"June 07, 2022","title":"01. JavaScript Challenge","categories":"챌린지","author":"sangzun","emoji":"😂"},"fields":{"slug":"/챌린지/drumkit/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://github.com/sangzun-han","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/챌린지/clock/","nextSlug":"/챌린지/drumkit/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}