{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/챌린지/flex-panel/",
    "result": {"data":{"cur":{"id":"c18d5832-0e6e-54d1-8fe8-2a877e43978e","html":"<h3 id=\"05-flex-panel-gallery\" style=\"position:relative;\"><a href=\"#05-flex-panel-gallery\" aria-label=\"05 flex panel gallery permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>05. Flex-Panel Gallery</h3>\n<ul>\n<li>flex 속성을 이용해서 레이아웃 변경</li>\n<li>화면 클릭시 해당 부분이 커지거나 작아지는 처리</li>\n</ul>\n<p>가장먼저 세로로 배치돼있는 요소들을 가로로 배치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.panels {\n  display:flex;\n}</code></pre></div>\n<p>이후 panel 내부의 값들을 정렬시킨다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.panel {\n  display:flex;\n  flex-direciton:column;\n  flex: 1;\n  justify-content:center;\n}\n\n.panel > * {\n  display:flex;\n  flex: 1 0 auto;\n  align-items:center;\n  justify-content:center;\n}</code></pre></div>\n<p>그 다음은 위 아래의 글자들을 translateY를 이용해서 화면 바깥으로 숨긴다. 이후에 특정 panel을 클릭하면 글자가 보이도록 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.panel > *:first-child {\n  transform: translateY(-100%);\n}\n\n.panel.open-active > *:first-child {\n  transform: translateY(0);\n}\n\n.panel > *:last-child {\n  transform: translateY(100%);\n}\n\n.panel.open-active > *:last-child {\n  transform: translateY(0);\n}\n\n.panel.open {\n  font-size: 40px;\n  flex : 4;\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const panels = document.querySelectorAll(\".panel\");\n\nfunction toggleOpen() {\n  this.classList.toggle(\"open\");\n}\nfunction toggleActive(e) {\n  if (e.propertyName.includes(\"flex\")) {\n    this.classList.toggle(\"open-active\");\n  }\n}\n\npanels.forEach((panel) => panel.addEventListener(\"click\", toggleOpen));\npanels.forEach((panel) =>\n  panel.addEventListener(\"transitionend\", toggleActive)\n);</code></pre></div>","excerpt":"05. Flex-Panel Gallery flex 속성을 이용해서 레이아웃 변경 화면 클릭시 해당 부분이 커지거나 작아지는 처리 가장먼저 세로로 배치돼있는 요소들을 가로로 배치한다. 이후 panel 내부의 값들을 정렬시킨다. 그 다음은 위 아래의 글자들을 translateY를 이용해서 화면 바깥으로 숨긴다. 이후에 특정 panel을 클릭하면 글자가 보이도록 한다.","frontmatter":{"date":"June 11, 2022","title":"05. Flex-Panel Gallery","categories":"챌린지","author":"sangzun","emoji":"😂"},"fields":{"slug":"/챌린지/flex-panel/"}},"next":{"id":"97913723-b75c-5faa-9b06-4b09d9eda680","html":"<h3 id=\"04-array-cardio-day-1\" style=\"position:relative;\"><a href=\"#04-array-cardio-day-1\" aria-label=\"04 array cardio day 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>04. Array Cardio Day 1</h3>\n<p>js에서 배열과 배열제어에 대한 내용</p>\n<p>모든 과정이 <code class=\"language-text\">filter map sort reduce</code>메서드만 사용할 수 있다면 무리없이 해결할 수 있는 문제들이다.</p>\n<ul>\n<li>\n<p>filter() 메서드는 주어진 함수의 조건을 만족하는 모든 요소를 모아 새로운 배열을 반환한다.</p>\n</li>\n<li>\n<p>map() 메서드는 배열내에 모든 요소 각각에 대하여 주어진 함수를 호출한 결과를 모아 새로운 배열을 반환한다.</p>\n</li>\n<li>\n<p>sort() 메서드는 배열의 요소를 정렬한다. 원래 배열이 정렬되는것이므로 주의해야 한다.</p>\n<ul>\n<li>\n<p>매개변수로 comapreFunction이 제공된다면 배열 요소는 compare 함수의 반환값에 따라 정렬된다.\ncomparFunction(a,b)일때 a-b로 크기를 비교하며 a-b가 양수일때 즉 a가 b보다 클때는 양수로 리턴 같으면 a-b가 음수일때는 음수로 리턴한다.</p>\n<p>리턴값이 음수이면 값을 앞으로 보내고 0이면 그대로 리턴값이 양수라면 뒤로보낸다. 그래서 최종적으로 오름차순 정렬이 된다.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>reduce() 메서드는 배열의 각 요소에 대해 주어진 reducer 함수를 실행하고 하나의 결과값을 반환한다.</p>\n<ul>\n<li>reducer 함수는 4개의 인자를 가진다. (acc,cur,idx,src)</li>\n<li>두번째 인자로 초기값을 줄 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"1-1500년대에-태어난-발명가\" style=\"position:relative;\"><a href=\"#1-1500%EB%85%84%EB%8C%80%EC%97%90-%ED%83%9C%EC%96%B4%EB%82%9C-%EB%B0%9C%EB%AA%85%EA%B0%80\" aria-label=\"1 1500년대에 태어난 발명가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 1500년대에 태어난 발명가</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">inventors.filter(\n  (inventor) => inventor.year >= 1500 &amp;&amp; inventor.year &lt; 1600)</code></pre></div>\n<h3 id=\"2-발명가의-이름과-성\" style=\"position:relative;\"><a href=\"#2-%EB%B0%9C%EB%AA%85%EA%B0%80%EC%9D%98-%EC%9D%B4%EB%A6%84%EA%B3%BC-%EC%84%B1\" aria-label=\"2 발명가의 이름과 성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 발명가의 이름과 성</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">inventors.map((inventor) => {\n    return inventor.first + \" \" + inventor.last;\n  }\n)\n</code></pre></div>\n<h3 id=\"3-발명가들-태어난-순서대로-정렬-오름차순으로\" style=\"position:relative;\"><a href=\"#3-%EB%B0%9C%EB%AA%85%EA%B0%80%EB%93%A4-%ED%83%9C%EC%96%B4%EB%82%9C-%EC%88%9C%EC%84%9C%EB%8C%80%EB%A1%9C-%EC%A0%95%EB%A0%AC-%EC%98%A4%EB%A6%84%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C\" aria-label=\"3 발명가들 태어난 순서대로 정렬 오름차순으로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 발명가들 태어난 순서대로 정렬 오름차순으로</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const ordered = inventors.sort(function (a, b) {\n  return a.year - b.year;\n});</code></pre></div>\n<h3 id=\"4-발명가들-나이의-합\" style=\"position:relative;\"><a href=\"#4-%EB%B0%9C%EB%AA%85%EA%B0%80%EB%93%A4-%EB%82%98%EC%9D%B4%EC%9D%98-%ED%95%A9\" aria-label=\"4 발명가들 나이의 합 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 발명가들 나이의 합</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">inventors.reduce((acc,inventor) => {\n  return acc + inventor.passed - inventor.year;\n},0)</code></pre></div>\n<h3 id=\"5-발명가들-나이순으로-정렬\" style=\"position:relative;\"><a href=\"#5-%EB%B0%9C%EB%AA%85%EA%B0%80%EB%93%A4-%EB%82%98%EC%9D%B4%EC%88%9C%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC\" aria-label=\"5 발명가들 나이순으로 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 발명가들 나이순으로 정렬</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">inventors.sort(function (a, b) {\n  return a.passed - a.year > b.passed - b.year ? -1 : 1;\n})</code></pre></div>\n<h3 id=\"7-사람-성을-기준으로-정렬\" style=\"position:relative;\"><a href=\"#7-%EC%82%AC%EB%9E%8C-%EC%84%B1%EC%9D%84-%EA%B8%B0%EC%A4%80%EC%9C%BC%EB%A1%9C-%EC%A0%95%EB%A0%AC\" aria-label=\"7 사람 성을 기준으로 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 사람 성을 기준으로 정렬</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">people.sort(function (last, next) {\n    const [aLast, aFirst] = last.split(\", \");\n    const [bLast, bFirst] = next.split(\", \");\n    return aLast > bLast ? 1 : -1;\n})</code></pre></div>\n<h3 id=\"8-배열의-해당요소가-몇개가-들어있는가\" style=\"position:relative;\"><a href=\"#8-%EB%B0%B0%EC%97%B4%EC%9D%98-%ED%95%B4%EB%8B%B9%EC%9A%94%EC%86%8C%EA%B0%80-%EB%AA%87%EA%B0%9C%EA%B0%80-%EB%93%A4%EC%96%B4%EC%9E%88%EB%8A%94%EA%B0%80\" aria-label=\"8 배열의 해당요소가 몇개가 들어있는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 배열의 해당요소가 몇개가 들어있는가</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">data.reduce(function (obj, item) {\n  if (!obj[item]) obj[item] = 0;\n  obj[item]++;\n  return obj;\n}, {})</code></pre></div>","frontmatter":{"date":"June 10, 2022","title":"04. Array Cardio Day 1","categories":"챌린지","author":"sangzun","emoji":"😂"},"fields":{"slug":"/챌린지/arraycardio/"}},"prev":{"id":"a0bccfd2-8843-5d47-9132-3f0d45252b81","html":"<h3 id=\"06-type-ahead\" style=\"position:relative;\"><a href=\"#06-type-ahead\" aria-label=\"06 type ahead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>06. Type Ahead</h3>\n<ul>\n<li>fetch API를 이용해서 데이터를 배열에 저장</li>\n<li>배열에 저장된 데이터를 기반으로 검색창에 입력된 값을 정규식을 이용하여 filter</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const cities = [];\n\nfetch(endpoint)\n  .then((res) => {\n    return res.json();\n  })\n  .then((data) => {\n    cities.push(...data);\n  });</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const input = document.querySelector(\".search\");\nconst suggestion = document.querySelector(\".suggestions\");\n\nconst findMatch = (cities, wordToMatch) => {\n  const regex = new RegExp(wordToMatch, \"gi\");\n  return cities.filter(\n      (place) => place.city.match(regex) || place.state.match(regex)\n    );\n  };\n\n  const getCity = () => {\n    suggestion.innerHTML = findMatch(cities, input.value)\n    .map((place) => {\n      const regex = new RegExp(input.value, \"gi\");\n      const city = place.city.replace(\n        regex,\n        `&lt;span class=\"hl\">${input.value}&lt;/span>`\n      );\n      const state = place.state.replace(\n        regex,\n        `&lt;span class=\"hl\">${input.value}&lt;/span>`\n      );\n      return `\n            &lt;li>\n              &lt;span class=\"name\">${city} ${state}&lt;/span>\n              &lt;span class=\"population\">${place.population}&lt;/span>\n            &lt;/li>\n            `;\n    }).join(\"\");\n  };\n\ninput.addEventListener(\"change\", getCity);\ninput.addEventListener(\"keyup\", getCity);</code></pre></div>","frontmatter":{"date":"June 12, 2022","title":"06. Type Ahead","categories":"챌린지","author":"sangzun","emoji":"😂"},"fields":{"slug":"/챌린지/typeahead/"}},"site":{"siteMetadata":{"siteUrl":"https://github.com/sangzun-han","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/챌린지/flex-panel/","nextSlug":"/챌린지/arraycardio/","prevSlug":"/챌린지/typeahead/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}