{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/챌린지/10. Hold Shift and Check Checkboxes/",
    "result": {"data":{"cur":{"id":"3cc40126-ccaa-5b94-a08f-a71425b21f9c","html":"<h3 id=\"10-hold-shift-and-check-checkboxes\" style=\"position:relative;\"><a href=\"#10-hold-shift-and-check-checkboxes\" aria-label=\"10 hold shift and check checkboxes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. Hold Shift and Check Checkboxes</h3>\n<p><img src=\"/10.holdShift.gif\" alt=\"holdShift\"></p>\n<p>마지막으로 체크한것과, 이후 쉬프트 키를 누른채 체크한것 사이의 모든 체크박스들이 자동으로 체크되야 한다.</p>\n<ol>\n<li>\n<p>lastChecked 변수를 통해 마지막에 체크가된 inputbox 하나를 기억한다.</p>\n</li>\n<li>\n<p>inBetween 변수는 lastChecked와 지금 현재 클릭한 input사이에 있는지 확인한다.</p>\n<ul>\n<li>lastChecked와 현재 클릭한 input사이에 있다면 True, 그렇지 않다면 False</li>\n</ul>\n</li>\n<li>\n<p>사이에 있다면 사이에 있는 모든 input을 모두 checked를 true로 변경한다.</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const checkboxes = document.querySelectorAll('.inbox input[type=\"checkbox\"]');\n\nlet lastChecked;\nfunction handleCheck(event) {\n  let inBetween = false;\n  if (event.shiftKey &amp;&amp; this.checked) {\n    checkboxes.forEach((checkbox) => {\n      if (checkbox === this || checkbox === lastChecked)\n      inBetween = !inBetween;\n      if (inBetween) checkbox.checked = true;\n    });\n  }\n  lastChecked = this;\n}\n\ncheckboxes.forEach((checkbox) =>\n  checkbox.addEventListener(\"click\", handleCheck)\n);</code></pre></div>","excerpt":"10. Hold Shift and Check Checkboxes holdShift 마지막으로 체크한것과, 이후 쉬프트 키를 누른채 체크한것 사이의 모든 체크박스들이 자동으로 체크되야 한다. lastChecked 변수를 통해 마지막에 체크가된 inputbox 하나를 기억한다. inBetween 변수는 lastChecked와 지금 현재 클릭한 input사이에 있는지 확인한다. lastChecked와 현재 클릭한 input사이에 있다면 True, 그렇지 않다면 False 사이에 있다면 사이에 있는 모든 input을 모두 checked를 true로 변경한다.","frontmatter":{"date":"June 30, 2022","title":"10. Hold Shift and Check Checkboxes","categories":"챌린지","author":"sangzun","emoji":"😂"},"fields":{"slug":"/챌린지/10. Hold Shift and Check Checkboxes/"}},"next":{"id":"4d2bafb4-8158-53d8-b328-714e41e1149c","html":"<h3 id=\"09-dev-tools-domination\" style=\"position:relative;\"><a href=\"#09-dev-tools-domination\" aria-label=\"09 dev tools domination permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>09. Dev Tools Domination</h3>\n<p>다양한 console 관련 메서드</p>\n<h3 id=\"1-log\" style=\"position:relative;\"><a href=\"#1-log\" aria-label=\"1 log permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. log</h3>\n<ul>\n<li>서식문자를 활용한 치환</li>\n</ul>\n<p>숫자 : <code class=\"language-text\">%d</code>\n문자 : <code class=\"language-text\">%s</code>\n객체 : <code class=\"language-text\">%o</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(\"%s\", \"💩\");</code></pre></div>\n<ul>\n<li>스타일링</li>\n</ul>\n<p><code class=\"language-text\">%c</code>를 사용하면 CSS 방식으로 작성된 스타일을 전달할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(\n  \"%c CSS 넣기\",\n  \"font-size:40px; background:black; text-shadow: 5px 5px 0 blue\"\n);</code></pre></div>\n<h3 id=\"2-warn-error-info\" style=\"position:relative;\"><a href=\"#2-warn-error-info\" aria-label=\"2 warn error info permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Warn, Error, Info</h3>\n<ul>\n<li>warn : 경고창 표시</li>\n<li>error : 에러창 표시</li>\n<li>info : (firefox에서) 파란 느낌표로 정보 표시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.warn(\"OH NO!\");\nconsole.error(\"OH ERROR\");\nconsole.info(\"Crocodiles eat 3-4 people per year\");</code></pre></div>\n<h3 id=\"3-assert\" style=\"position:relative;\"><a href=\"#3-assert\" aria-label=\"3 assert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. assert</h3>\n<p>assert() : 첫번째 인자가 false인 경우 오류메시지 출력 true인 경우 아무일도 일어나지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const p = document.querySelector(\"p\");\nconsole.assert(p.classList.contains(\"ouch\"), \"틀렸다!\");</code></pre></div>\n<h3 id=\"4-grouping\" style=\"position:relative;\"><a href=\"#4-grouping\" aria-label=\"4 grouping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. grouping</h3>\n<p>group() : 구조적이고 가독성을 높일 수 있게 그룹으로 묶는다.\ngroupCollapsed() : 그룹을 축소된 상태로 표시한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dogs.forEach((dog) => {\n  console.group(`${dog.name}`);\n  console.log(`This is ${dog.name}`);\n  console.log(`${dog.name} is ${dog.age} years old`);\n  console.log(`${dog.name} is ${dog.age * 7} dog years old`);\n  console.groupEnd(`${dog.name}`);\n});\n\ndogs.forEach((dog) => {\n  console.groupCollapsed(`${dog.name}`);\n  console.log(`This is ${dog.name}`);\n  console.log(`${dog.name} is ${dog.age} years old`);\n  console.log(`${dog.name} is ${dog.age * 7} dog years old`);\n  console.groupEnd(`${dog.name}`);\n});</code></pre></div>\n<h3 id=\"5-time\" style=\"position:relative;\"><a href=\"#5-time\" aria-label=\"5 time permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. time</h3>\n<p>코드 지점간 시간을 측정할때는 보통 아래와 같은 방법을 사용한다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const start = Date.now(); // 시작 시간\n\nfetch(\"https://api.github.com/users/wesbos\")\n  .then((data) => data.json())\n  .then((data) => {\n    console.log(Date.now() - start + \"ms\"); // 시간 계산\n    console.log(data);\n  });</code></pre></div>\n<p>더 간단하게 나타내는 방법은 아래와 같다. 아래와 같이 나타낼 경우 코드는 더 짧고 측정은 더 정확하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.time(\"fetching data\");\nfetch(\"https://api.github.com/users/wesbos\")\n  .then((data) => data.json())\n  .then((data) => {\n    console.timeEnd(\"fetching data\");\n    console.log(data);\n  });</code></pre></div>","frontmatter":{"date":"June 29, 2022","title":"09. Dev Tools Domination","categories":"챌린지","author":"sangzun","emoji":"😂"},"fields":{"slug":"/챌린지/09. Dev Tools Domination/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://github.com/sangzun-han","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/챌린지/10. Hold Shift and Check Checkboxes/","nextSlug":"/챌린지/09. Dev Tools Domination/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}