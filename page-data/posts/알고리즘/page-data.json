{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/알고리즘",
    "result": {"pageContext":{"currentCategory":"알고리즘","categories":["All","알고리즘","JAVA","프로젝트","javascript"],"edges":[{"node":{"id":"c76a4ef3-dd94-5118-a98b-8ad6d68b5e74","excerpt":"시뮬레이션과 구현문제들 풀이에 어려움을 겪어서 푼 문제들을 어떻게 접근해서 풀었는지 모두 기록합니다. 백준 14499. 주사위 굴리기 처음 주사위의 모든 면은 0 주사위를 굴렸을 때 이동한 칸에 쓰여있는게 0 이라면 주사위 바닥면에 적혀있는 숫자를 복사한다. 주사위를 굴렸을 때 이동한 칸에 쓰여있는게 0이 아니라면 주사위 바닥면에 이동한 칸에 있는 숫자를 복사한다. 범위를 벗어나면 무시하며 출력도 하지 않는다. 위의 내용들이 주사위 굴리기 문제의 조건들입니다. 이 문제에서 주사위를 굴리는 방법은 동쪽, 서쪽, 남쪽, 북쪽 4가지 경우 밖에 존재하지 않습니다. 아래 그림을 보면서 한번 이해를 해보면 될것같습니다.\n주사위돌리기 주사위를 동쪽, 서쪽으로 굴리면 2,5는 고정이 된채로 다른 숫자들이 움직이는걸 알 수 있습니다. 또한 주사위를 남쪽,북쪽으로 굴리면 4,3은 고정이 된채로 다른 숫자들이 움직입니다. 예를들어 주사위를 동쪽으로 굴린다고 가정해보겠습니다. 1은 3위치로 움직입니다…","fields":{"slug":"/알고리즘/시뮬레이션과 구현/"},"frontmatter":{"categories":"알고리즘","title":"시뮬레이션과 구현","date":"August 20, 2022"}},"next":{"fields":{"slug":"/알고리즘/백준11000/"}},"previous":null},{"node":{"id":"f318eb7e-4c6f-5544-9516-81168136789d","excerpt":"강의실 배정 어떤 방법으로 강의를 선택해야 회의실이 최소가 될까? 시작시간이 가장 빠른것을 선택 (X) 끝나는 시간이 가장 빠른것을 선택 -> 종료되는 강의시간이 빠르면 더 많은 강의를 배정할 확률이 높아진다. 수업시간이 짧은 강의부터 선택 (X)-> 0-1 1-4 4-5 3-5 시작시간을 기준으로 정렬 탐색 첫번째 강의의 끝나는시간을 큐에 추가 다음 강의의 시작시간이랑 큐의 가장 위에있는값 비교 다음 강의 시작시간 >= 큐의 가장 위에있는 값 —> 같은 강의실 써도된다. (큐에서 제거) 조건을 만족하지 못하면 큐에 추가","fields":{"slug":"/알고리즘/백준11000/"},"frontmatter":{"categories":"알고리즘","title":"백준 11000 강의실 배정","date":"August 02, 2022"}},"next":{"fields":{"slug":"/알고리즘/알고리즘 기초/"}},"previous":{"fields":{"slug":"/알고리즘/시뮬레이션과 구현/"}}},{"node":{"id":"fe793ae8-d08b-5d55-8f9b-d08e45f2b1fb","excerpt":"1. 알고리즘 기초 문제 해결 과정 문제를 읽고 이해한다. 문제를 익숙한 용어로 재정의한다. 어떻게 해결할지 계획을 세운다. 계획을 검증한다. 프로그램으로 구현한다. 어떻게 풀었는지 돌아보고, 개선할 방법이 있는지 찾아본다. 체계적인 접근을 위한 질문 비슷한 문제를 풀어본적 있는가 단순한 방법에서 시작할 수 있을까 문제를 단순화 할 수 있을까 그림으로 그려 볼 수 있을까 수식으로 표현할 수 있을까 문제를 분해 할 수 있을까 뒤에서부터 생각해서 문제를 풀 수 있을까 특정 형태의 답만을 고려할 수 있을까 정렬하고 풀 수 있을까 Ex) 1부터 100까지 합을 구하는 문제 1+2+3…+100 = 5050 (반복문) 100*(1+100) / 2 = 5050 시간복잡도 최선의 경우 (Best Case) 빅 오메가 표기법 사용  최선의 시나리오로 최소 x 시간이 걸림 최악의 경우 (Worst Case) 빅 오 표기법 사용  최악의 시나리오로 아무리 오래 걸려도 이 시간보다 덜 걸림 평균의경우 …","fields":{"slug":"/알고리즘/알고리즘 기초/"},"frontmatter":{"categories":"알고리즘","title":"알고리즘 기초","date":"August 01, 2022"}},"next":{"fields":{"slug":"/알고리즘/재귀함수/"}},"previous":{"fields":{"slug":"/알고리즘/백준11000/"}}},{"node":{"id":"0728da14-b3f9-5ce6-beeb-d3fd1d827c79","excerpt":"반복과 재귀 반복과 재귀는 유사한 작업을 수행할 수 있다. 반복은 수행하는 작업이 완료될 때 까지 계속 반복 재귀는 주어진 문제의 해를 구하기 위해 동일하면서 더 작은 문제의 해를 이용하는 방법 하나의 큰 문제를 해결할 수 있는 더 작은 문제로 쪼개고 결과들을 결합한다. 재귀 함수 (recursive function) 함수에 대한 정의를 명확히  평평하게 로직을 바라보기  각 재귀의 실행을 결정하는 결정요인(값)은 로 선언한다. 종료조건 존재? 함수 내부에서 직접 혹은 간접적으로 자기 자신을 호출하는 함수  일반적으로 재귀적 정의를 이용해서 재귀함수를 구현 재귀적 프로그램을 작성하는 것은 반복구조에 비해 간결하고 이해하기 쉬움 함수 호출은 프로그램 메모리 구조에서 을 사용 따라서 재귀 호출은 반복적인 스택의 사용을 의미하며 메모리 및 속도에서 성능저하 발생  재귀 반복 종료 재귀 함수 호출이 종료되는 base case 반복문의 종료 조건 수행시간 (상대적) 느림 빠름 메모리 공간 …","fields":{"slug":"/알고리즘/재귀함수/"},"frontmatter":{"categories":"알고리즘","title":"알고리즘 기초 - 재귀함수","date":"August 01, 2022"}},"next":{"fields":{"slug":"/JAVA/자바기초3/"}},"previous":{"fields":{"slug":"/알고리즘/알고리즘 기초/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}