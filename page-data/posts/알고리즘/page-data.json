{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/알고리즘","result":{"pageContext":{"currentCategory":"알고리즘","categories":["All","프로젝트","알고리즘","javascript"],"edges":[{"node":{"id":"b288296e-410a-5b15-8b25-fb32283d50fc","excerpt":"백준 11725. 트리의 부모 찾기 문제 제목에서  라고 적혀있기 때문에 DFS로 접근했습니다. 일단 접근하기 전에 생각했던 문제는 자바에서 최대 재귀 depth는 대략 10,000정도 라고 알고있었기 때문에 N의 범위가 100,000만인 이 문제에서 overflow가 발생하지 않을까 생각했지만 이 문제는 발생하지 않았습니다. 만약 stackoverflow가 발생한다면 BFS로 접근해야 될것 같습니다. 출력은 System.out.println()으로 하면 시간이 오래걸리기 때문에 StringBuilder를 이용했습니다.","fields":{"slug":"/알고리즘/11725/"},"frontmatter":{"categories":"알고리즘","title":"백준 11725 트르의 부모 찾기","date":"December 24, 2022"}},"next":{"fields":{"slug":"/알고리즘/2473/"}},"previous":{"fields":{"slug":"/프로젝트/nanumi/"}}},{"node":{"id":"7fdf8f5b-a9fa-5a1e-b7cb-5c97440660fa","excerpt":"백준 2473. 세 용액 2470번 두 용액 문제와 유사합니다. 다른점이라면 2470번 문제는 용액 두개를 선택해서 0과 가까운 것을 찾는거고\r\n이 문제는 3개의 용액을 선택해서 0과 가까운것을 찾는것입니다. 투 포인터 2470번과 비슷하게 투 포인터로 풀었습니다. 단 주의해야할점은 투 포인터로는 두 가지의 용액밖에 선택할 수 없기 때문에 반복문 하나를 통해서 하나의 용액을 고정시켜놓고 투포인터를 돌려야 합니다. 따라서 시간복잡도는 O(N^2)이고 시간제한 1초안에 들어올수 있다고 판단했습니다.","fields":{"slug":"/알고리즘/2473/"},"frontmatter":{"categories":"알고리즘","title":"백준 2473 세 용액","date":"December 24, 2022"}},"next":{"fields":{"slug":"/알고리즘/7453/"}},"previous":{"fields":{"slug":"/알고리즘/11725/"}}},{"node":{"id":"f87912cb-a489-510d-a326-63d2f33b672a","excerpt":"백준 7453. 합이 0인 네 정수 완전탐색 가장 먼저 생각한 방법은 완전탐색이었습니다. 하지만 n의 범위가 최대 4000이기 때문에 4000 x 4000 x 4000 x 4000 = O(256,000,000,000,000)으로 제한시간 12초내에 들어오기는 힘들어 보입니다. Map 두 번째로 생각한 건 Map을 이용한것입니다. 결국 A,B,C,D에서 각각 하나씩을 뽑아서 0을 만들면 되기 때문에\r\n(A,B)의 모든 합을 구한 배열과 (C,D)의 모든 합을 구한 배열을 구했습니다. 이 때 (A,B)의 모든 합을 구한값을 배열에 저장하고, (C,D)의 모든 합을 구한 값은 Map<Integer,Integer>형태로 저장했습니다. (A,B)의 배열에서 -25가 나왔다면 (C,D)에서 containsKeys를 이용해 25가 몇번 등장했는지 알면되기 때문에 시간복잡도 O(N^2)으로 해결할수 있다고 판단했지만 이 일어나서 시간초과가 발생했습니다. 투 포인터 이분탐색으로 해결 할 수도 있지…","fields":{"slug":"/알고리즘/7453/"},"frontmatter":{"categories":"알고리즘","title":"백준 7453 합이 0인 네 정수","date":"December 20, 2022"}},"next":{"fields":{"slug":"/프로젝트/market/"}},"previous":{"fields":{"slug":"/알고리즘/2473/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}