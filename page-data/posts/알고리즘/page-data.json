{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/알고리즘",
    "result": {"pageContext":{"currentCategory":"알고리즘","categories":["All","알고리즘","프로젝트","javascript"],"edges":[{"node":{"id":"a7380bb2-dcfb-5c83-8242-2fab2146e673","excerpt":"백준 7453. 합이 0인 네 정수 완전탐색 가장 먼저 생각한 방법은 완전탐색이었습니다. 하지만 n의 범위가 최대 4000이기 때문에 4000 x 4000 x 4000 x 4000 = O(256,000,000,000,000)으로 제한시간 12초내에 들어오기는 힘들어 보입니다. Map 두 번째로 생각한 건 Map을 이용한것입니다. 결국 A,B,C,D에서 각각 하나씩을 뽑아서 0을 만들면 되기 때문에\n(A,B)의 모든 합을 구한 배열과 (C,D)의 모든 합을 구한 배열을 구했습니다. 이 때 (A,B)의 모든 합을 구한값을 배열에 저장하고, (C,D)의 모든 합을 구한 값은 Map<Integer,Integer>형태로 저장했습니다. (A,B)의 배열에서 -25가 나왔다면 (C,D)에서 containsKeys를 이용해 25가 몇번 등장했는지 알면되기 때문에 시간복잡도 O(N^2)으로 해결할수 있다고 판단했지만 이 일어나서 시간초과가 발생했습니다. 투 포인터 이분탐색으로 해결 할 수도 있지만…","fields":{"slug":"/알고리즘/7453/"},"frontmatter":{"categories":"알고리즘","title":"백준 7453 합이 0인 네 정수","date":"December 20, 2022"}},"next":{"fields":{"slug":"/프로젝트/market/"}},"previous":null}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}