{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/챌린지",
    "result": {"pageContext":{"currentCategory":"챌린지","categories":["All","챌린지","알고리즘","프로젝트","javascript"],"edges":[{"node":{"id":"c4fe64d4-9b25-568e-9d53-6dfaf96a0fa0","excerpt":"08. Fun with HTML Canvas 를 이용해 여러가지 효과를 넣는것이 목표인 챌린지이다. 아무것도 주어지지 않은 초기상태에서 어디서부터 시작을 해야할지 아예 감이 잡히지 않아 정답이 포함된 코드를 보면서 풀어나갔다. 문제를 해결해나가는 과정은 아래와 같다. 기본 설정 마우스를 누르고 움직일때마다 변경하기 위한 변수 생성 마우스를 누르고 움직일때마다 변경하기 위한 함수 작성 함수 실행 1. 기본설정 strokeStyle : 도형 주위에 선에 사용할 색상\nlineJoin : 두선이 만나는 모서리 유형 ex) round,bavel,miter(기본값)\nlineCap : 줄 끝의 유형 ex) round,square,butt(기본값) 2. 마우스를 누르고 움직일때마다 변경하기 위한 변수 생성 3. 마우스를 누르고 움직일때마다 변경하기 위한 함수 생성 4. 함수 실행","fields":{"slug":"/챌린지/08. Fun with HTML Canvas/"},"frontmatter":{"categories":"챌린지","title":"08. Fun with HTML Canvas","date":"June 28, 2022"}},"next":{"fields":{"slug":"/챌린지/07. Array Cardio Day2/"}},"previous":null},{"node":{"id":"906b84c1-0fca-5305-9d3c-7d622f53e6d5","excerpt":"07. Array Cardio Day 2 자바스크립트의 메소드 익히기  : 배열 안의 어떤 요소라도 주어진 함수를 통과하는가  : 배열 안의 모든 요소가 주어진 함수를 통과하는가  : 함수를 만족하는 첫번째 요소의 값 반환  : 함수를 만족하는 배열의 첫번째 요소의 인덱스 반환 19세 이상인 사람이 1명이상 있는지? 모든 사람이 19세 이상인지? ID가 823423인 사람 찾기 ID가 823423인 사람을 찾고 지우기","fields":{"slug":"/챌린지/07. Array Cardio Day2/"},"frontmatter":{"categories":"챌린지","title":"07. Array Cardio Day 2","date":"June 27, 2022"}},"next":{"fields":{"slug":"/알고리즘/11047/"}},"previous":{"fields":{"slug":"/챌린지/08. Fun with HTML Canvas/"}}},{"node":{"id":"ce4f8794-2a24-52e6-b58a-2a65168b917b","excerpt":"06. Type Ahead fetch API를 이용해서 데이터를 배열에 저장 배열에 저장된 데이터를 기반으로 검색창에 입력된 값을 정규식을 이용하여 filter","fields":{"slug":"/챌린지/06. Type ahead/"},"frontmatter":{"categories":"챌린지","title":"06. Type Ahead","date":"June 12, 2022"}},"next":{"fields":{"slug":"/챌린지/05. Flex-Panel Gallery/"}},"previous":{"fields":{"slug":"/알고리즘/11047/"}}},{"node":{"id":"c8480134-4f28-53f1-bf37-48732ba77f7b","excerpt":"05. Flex-Panel Gallery flex 속성을 이용해서 레이아웃 변경 화면 클릭시 해당 부분이 커지거나 작아지는 처리 가장먼저 세로로 배치돼있는 요소들을 가로로 배치한다. 이후 panel 내부의 값들을 정렬시킨다. 그 다음은 위 아래의 글자들을 translateY를 이용해서 화면 바깥으로 숨긴다. 이후에 특정 panel을 클릭하면 글자가 보이도록 한다.","fields":{"slug":"/챌린지/05. Flex-Panel Gallery/"},"frontmatter":{"categories":"챌린지","title":"05. Flex-Panel Gallery","date":"June 11, 2022"}},"next":{"fields":{"slug":"/챌린지/04. Array Cardio Day1/"}},"previous":{"fields":{"slug":"/챌린지/06. Type ahead/"}}},{"node":{"id":"239de6aa-9f2c-566e-b520-854010d81092","excerpt":"04. Array Cardio Day 1 js에서 배열과 배열제어에 대한 내용 모든 과정이 메서드만 사용할 수 있다면 무리없이 해결할 수 있는 문제들이다. filter() 메서드는 주어진 함수의 조건을 만족하는 모든 요소를 모아 새로운 배열을 반환한다. map() 메서드는 배열내에 모든 요소 각각에 대하여 주어진 함수를 호출한 결과를 모아 새로운 배열을 반환한다. sort() 메서드는 배열의 요소를 정렬한다. 원래 배열이 정렬되는것이므로 주의해야 한다. 매개변수로 comapreFunction이 제공된다면 배열 요소는 compare 함수의 반환값에 따라 정렬된다.\ncomparFunction(a,b)일때 a-b로 크기를 비교하며 a-b가 양수일때 즉 a가 b보다 클때는 양수로 리턴 같으면 a-b가 음수일때는 음수로 리턴한다. 리턴값이 음수이면 값을 앞으로 보내고 0이면 그대로 리턴값이 양수라면 뒤로보낸다. 그래서 최종적으로 오름차순 정렬이 된다. reduce() 메서드는 배열의 각 요…","fields":{"slug":"/챌린지/04. Array Cardio Day1/"},"frontmatter":{"categories":"챌린지","title":"04. Array Cardio Day 1","date":"June 10, 2022"}},"next":{"fields":{"slug":"/챌린지/03. CSS Variables/"}},"previous":{"fields":{"slug":"/챌린지/05. Flex-Panel Gallery/"}}},{"node":{"id":"32345de5-e04a-5b8d-9591-785abfcfbaae","excerpt":"03. CSS Variables 은 data-@@@로 이루어진 데이터를 가져온다. 는 최상위 요소인 html을 가리킨다. 핵심적인 내용은 css값들이 변수로 지정됐다는것이다.  addEventListener를 이용해서 spacing, blur, base에 변화가 일어난다면 setProperty를 이용해서 값을 수정해주면 된다. range-bar로 이루어진 두 input 태그는 data-sizing=“px”이고 색을 결정하는 input 태그는 data-sizing이 존재하지 않기 때문에 or연산자를 이용해서 변수에 담아준다. 변수 suffix는 range-bar를 건드린다면 px 색을 건드린다면 \"\"값을 대입한다. 최상위 요소인 html에 event.target.name -> spacing,blur,base 중 1개의 값 event.target.value -> 0~200까지의 값 또는 색 ex) spacing 30px의 값을 대입한다.","fields":{"slug":"/챌린지/03. CSS Variables/"},"frontmatter":{"categories":"챌린지","title":"03. CSS Variables","date":"June 09, 2022"}},"next":{"fields":{"slug":"/챌린지/02. JS and CSS Clock/"}},"previous":{"fields":{"slug":"/챌린지/04. Array Cardio Day1/"}}},{"node":{"id":"d82e71f2-ca2c-5eac-830b-8ae603948888","excerpt":"02. Js and CSS Clock 을 설정하지 않으면 회전 중심은 가운데를 기준으로 한다. deg는 360이 최대값이므로 분,초는 60으로 나누고 시간은 12로 나누어서 360도를 곱해준다. 그리고 시계바늘이 12에서 시작하기 위해 90deg를 따로 설정했으므로 맞춰주기 위해 90도를 더해준다. 을 이용하면 transition 효과의 시간당 속도를 설정해줄수 있다. 처음에는 초를 6도씩 회전시키고 360도가 되면 분을 6도 회전시키는 복잡한 방법을 생각했지만 setInterval을 이용해서\n계속해서 시간을 받아오고 그 시간의 각도를 계산하는 방법으로 구현했다.","fields":{"slug":"/챌린지/02. JS and CSS Clock/"},"frontmatter":{"categories":"챌린지","title":"02. JS and CSS Clock","date":"June 08, 2022"}},"next":{"fields":{"slug":"/챌린지/01. Drum kit/"}},"previous":{"fields":{"slug":"/챌린지/03. CSS Variables/"}}},{"node":{"id":"926316b3-fe10-5709-8c1e-627e129cdfa6","excerpt":"라이브러리나 프레임워크 사용 없이 모던자바스크립트만으로 하루에 하나씩 30일동안 30가지 미니 프로젝트를 만드는 챌린지입니다. 프로젝트 아이디어를 떠올리기 어려워 주제와 디자인이 정해진 미니 프로젝트를 따라 만들어보는것으로 시작했습니다. 01. drum-kit 이벤트를 이용해서 입력값을 받아서 정해진 오디오를 재상한다. 오디오를 재생할 때 해당 키에 .playing 이라는 클래스를 추가해주고 오디오 재생이 끝나면 .playing클래스를 제거한다. 는 transition의 완료를 감지할 수 있는 이벤트이다.","fields":{"slug":"/챌린지/01. Drum kit/"},"frontmatter":{"categories":"챌린지","title":"01. Drum kit","date":"June 07, 2022"}},"next":{"fields":{"slug":"/프로젝트/market/"}},"previous":{"fields":{"slug":"/챌린지/02. JS and CSS Clock/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}