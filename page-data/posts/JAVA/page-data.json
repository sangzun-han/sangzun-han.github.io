{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/JAVA",
    "result": {"pageContext":{"currentCategory":"JAVA","categories":["All","JAVA","알고리즘","프로젝트","javascript"],"edges":[{"node":{"id":"0f799a0a-ae0c-5ebb-abd6-1bbda409e5f9","excerpt":"Generic 다양한 타입의 객체를 다루는 메서드, 컬렉션 클래스에서 컴파일시에 타입 체크 미리 사용할 타입을 명시해서 형 변환을 하지 않아도 되게함 객체의 타입에 대한 안전성 향상 및 형 변환의 번거로움 감소 Generic 표현 클래스 또는 인터페이스 선언시 <>에 타입 파라미터 표시 ex) public class className {} 타입 파라미터 특별한 의미의 알파벳 보다는 단순히 임의의 참조형 타입을 말함 T : reference Type, E: Element, K: Key, V: Value 객체 생성 변수 쪽과 생성 쪽의 타입은 반드시 같아야 함 type parameter의 제한 계산기 프로그램 구현시 Number이하의 타입으로만 제한 type parameter 선언 뒤 extends와 함께 상위 타입 명시 Generic Type 객체를 할당받을 때 Generic type<?> → 타입에 대한 제한 없음(Object) Generic type<? extends T> → T…","fields":{"slug":"/JAVA/자바기초3/"},"frontmatter":{"categories":"JAVA","title":"자바 기초 3","date":"July 31, 2022"}},"next":{"fields":{"slug":"/JAVA/자바기초2/"}},"previous":null},{"node":{"id":"4b618093-5b38-5065-8d9e-ec162fd38aa9","excerpt":"객체와 클래스 현실의 객체가 갖는 속성과 기능은  되어 클래스에 정의된다. 클래스는 구체화되어 프로그램의  가 된다. 내가 필요한 것들(특징,기능)로만 구성된 객체를 만들어낼 수 있는 클래스를 정의 ⇒  클래스 - 붕어빵틀 객체 - 붕어빵 객체 메모리 구조 static 영역에 static 변수, static 메서드를 올림 stack 영역에 참조 변수 선언 heap 영역에 객체 생성 객체의 멤버변수만 생성 메서드는 일반 영역에 한번만 생성되며 객체와 링크시켜 놓음 객체의 주소를 stack 영역의 참조변수에 할당 메소드 오버로딩 메소드이름은 같고, 매개변수 타입이나 개수가 다른 달라 다른 메소드로서 동작 같은 기능이지만 상황에 따라 유연하게 사용해야하는 경우 Ex) printf, 생성자 생성자 객체를 생성하고 멤버 변수 초기화, 또는 초기설정 default 생성자는 어떠한 생성자도 없는 경우에만 컴파일러에 의해 제공 OOP Object 클래스 모든 클래스의 조상 클래스 별도의  선언이…","fields":{"slug":"/JAVA/자바기초2/"},"frontmatter":{"categories":"JAVA","title":"자바 기초 2","date":"July 31, 2022"}},"next":{"fields":{"slug":"/JAVA/자바기초1/"}},"previous":{"fields":{"slug":"/JAVA/자바기초3/"}}},{"node":{"id":"dea599dc-bfe1-546d-9254-79dd52141669","excerpt":"연산자와 형변환 형변환 형변환: 변수의 타입을 다른 타입으로 변환 primitive는 primitive끼리 reference는 reference끼리 형 변환가능 boolean은 다른 기본 타입과 호환 X 기본 타입과 참조형의 형 변환을 위해서 wrapper 클래스 사용 형변환 방법 묵시적 형변환 작은 데이터 타입 → 큰 데이터 타입 명시적 형변환 큰 데이터 타입 → 작은 데이터 타입 (값 손실이 발생할 수 있다.) 값의 크기, 타입의 크기가 아닌 가 커지는 방향으로 할당할 경우에 묵시적 형변환이 발생한다. byte → (short,char) → int → long → float → double 연산자 어떤 기능을 수행하는 기호(+,-,*,/) 연산자 종류와 우선순위 및 결합 방향 연산자의 우선순위를 외우는것은 어렵기 떄문에 ()를 활용하는것이 편함 조건문 배열  : 배열은 최초 메모리 할당 이후 변경 불가능 동일한 타입의 데이터 0개 이상을 하나의 연속된 메모리 공간에서 관리  키…","fields":{"slug":"/JAVA/자바기초1/"},"frontmatter":{"categories":"JAVA","title":"자바 기초 1","date":"July 30, 2022"}},"next":{"fields":{"slug":"/알고리즘/11047/"}},"previous":{"fields":{"slug":"/JAVA/자바기초2/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}