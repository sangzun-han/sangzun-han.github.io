{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/알고리즘/재귀함수/",
    "result": {"data":{"cur":{"id":"0728da14-b3f9-5ce6-beeb-d3fd1d827c79","html":"<h2 id=\"반복과-재귀\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EB%B3%B5%EA%B3%BC-%EC%9E%AC%EA%B7%80\" aria-label=\"반복과 재귀 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반복과 재귀</h2>\n<ul>\n<li>반복과 재귀는 유사한 작업을 수행할 수 있다.</li>\n<li>반복은 수행하는 작업이 완료될 때 까지 계속 반복</li>\n<li>재귀는 주어진 문제의 해를 구하기 위해 동일하면서 더 작은 문제의 해를 이용하는 방법\n<ul>\n<li>하나의 큰 문제를 해결할 수 있는 더 작은 문제로 쪼개고 결과들을 결합한다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"재귀-함수-recursive-function\" style=\"position:relative;\"><a href=\"#%EC%9E%AC%EA%B7%80-%ED%95%A8%EC%88%98-recursive-function\" aria-label=\"재귀 함수 recursive function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>재귀 함수 (recursive function)</h3>\n<ol>\n<li>함수에 대한 정의를 명확히 <code class=\"language-text\">What</code></li>\n<li>평평하게 로직을 바라보기 <code class=\"language-text\">Flat</code></li>\n<li>각 재귀의 실행을 결정하는 결정요인(값)은 <code class=\"language-text\">매개변수</code>로 선언한다.</li>\n<li>종료조건 존재?</li>\n</ol>\n<ul>\n<li>함수 내부에서 직접 혹은 간접적으로 자기 자신을 호출하는 함수 <code class=\"language-text\">자신을 통해 자신을 정의</code></li>\n<li>일반적으로 재귀적 정의를 이용해서 재귀함수를 구현</li>\n<li>재귀적 프로그램을 작성하는 것은 반복구조에 비해 간결하고 이해하기 쉬움</li>\n<li>함수 호출은 프로그램 메모리 구조에서 <code class=\"language-text\">스택</code>을 사용</li>\n<li>따라서 재귀 호출은 반복적인 스택의 사용을 의미하며 메모리 및 속도에서 성능저하 발생\n<table>\n<thead>\n<tr>\n<th></th>\n<th>재귀</th>\n<th>반복</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>종료</td>\n<td>재귀 함수 호출이 종료되는 base case</td>\n<td>반복문의 종료 조건</td>\n</tr>\n<tr>\n<td>수행시간</td>\n<td>(상대적) 느림</td>\n<td>빠름</td>\n</tr>\n<tr>\n<td>메모리 공간</td>\n<td>(상대적) 많이 사용</td>\n<td>적게 사용</td>\n</tr>\n<tr>\n<td>소스 코드 길이</td>\n<td>짧고 간결</td>\n<td>길다</td>\n</tr>\n<tr>\n<td>소스 코드 형태</td>\n<td>선택 구조(if … else)</td>\n<td>반복 구조(for, while)</td>\n</tr>\n<tr>\n<td>무한 반복시</td>\n<td>스택 오버플로우</td>\n<td>cpu를 반복해서 점유</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<h3 id=\"피보나치-수열\" style=\"position:relative;\"><a href=\"#%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98-%EC%88%98%EC%97%B4\" aria-label=\"피보나치 수열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>피보나치 수열</h3>\n<ul>\n<li>이전의 두 수 합을 다음 항으로 하는 수열\n<ul>\n<li>F0 = 0, F1 = 1</li>\n<li>Fn = Fn-1 + fn-2 (n≥2)</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 중복 호출</span>\n<span class=\"token function\">fibo</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> n<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span> <span class=\"token keyword\">return</span> n\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> <span class=\"token function\">fibo</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">fibo</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">/*\nmemoization\n이전에 계산한 값을 메모리에 저장해서 매번 다시 계산하지 않도록\n전체적인 실행속도를 빠르게하는 기술.\n*/</span></code></pre></div>\n<h3 id=\"하노이탑\" style=\"position:relative;\"><a href=\"#%ED%95%98%EB%85%B8%EC%9D%B4%ED%83%91\" aria-label=\"하노이탑 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>하노이탑</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/*\nn개의 원판을 이동시켜라\n1. 위에서부터 n-1까지 임시기둥으로 옮기기\n2. n 원판을 목적기둥으로 옮기기\n3. 임시기둥에 있는 n-1개의 원판을 목적기둥으로 옮기기\n*/</span>\n<span class=\"token function\">hanoi</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> temp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span>\n\t<span class=\"token comment\">// 위 ~ n-1 이동</span>\n\t<span class=\"token function\">hanoi</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\">// n 이동</span>\n\t<span class=\"token comment\">// n-1을 n위에 이동</span>\n\t<span class=\"token function\">hanoi</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"순열\" style=\"position:relative;\"><a href=\"#%EC%88%9C%EC%97%B4\" aria-label=\"순열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>순열</h2>\n<ul>\n<li>서로 다른 것들 중 몇개를 뽑아서 한 줄로 나열하는 것</li>\n<li>서로 다른 n개 중 r개를 택하는 순열</li>\n</ul>\n<p><code class=\"language-text\">nPr</code> = n _ (n-1) _ (n-2) _ (n-3) _ … * (n-r+1)</p>\n<p><code class=\"language-text\">npn</code> = n!</p>\n<p><code class=\"language-text\">순서에 의미가 있다면 순열</code> <code class=\"language-text\">순서에 의미가 없다면 조합</code></p>\n<p>ex) 1~9까지 숫자 한번씩 사용해서 4자리의 비밀번호를 만든다. →9P4 (순열)</p>\n<p>ex) 1~9까지 여러번 사용해서 4자리의 비밀번호를 만든다 →9<strong>𝛱</strong>4 (중복순열)</p>\n<p>ex) 복권 70개의 숫자중 5개를 뽑는다. → 70C5 (조합)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// {1,2,3]을 포함하는 모든 순열을 생성하는 함수</span>\nnumbers<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token comment\">// 순열 저장 배열</span>\nisSelected<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> 인덱스에 해당하는 숫자가 사용 중인지 저장하는 배열\n<span class=\"token function\">perm</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span> <span class=\"token comment\">// cnt : 현재까지 뽑은 순열 수의 개수</span>\n\n<span class=\"token keyword\">if</span> cnt <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n\t순열 생성 완료\n<span class=\"token keyword\">else</span>\n\t<span class=\"token keyword\">for</span> i from <span class=\"token number\">1</span> <span class=\"token keyword\">to</span> <span class=\"token number\">3</span>\n\t\t<span class=\"token keyword\">if</span> isSelcted<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span> then <span class=\"token keyword\">continue</span>\n\t\tnumbers<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i\n\t\tisSelected<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\t\t<span class=\"token function\">perm</span><span class=\"token punctuation\">(</span>cnt<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\tisSelected<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\tend <span class=\"token keyword\">for</span>\n</code></pre></div>\n<h3 id=\"조합\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%ED%95%A9\" aria-label=\"조합 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조합</h3>\n<ul>\n<li>서로 다른 n개의 원소 중 r개를 순서 없이 골라낸 것</li>\n</ul>\n<p><code class=\"language-text\">nCr</code> = n! / (n-r)!*r!</p>\n<ul>\n<li>조합의 수가 많아지는 경우는 r의값이 n/2</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">}</span> 중 원소 <span class=\"token number\">3</span>개를 포함하는 모든 조합을 생성\n<span class=\"token keyword\">for</span> i from <span class=\"token number\">1</span> <span class=\"token keyword\">to</span> <span class=\"token number\">4</span>\n\t<span class=\"token keyword\">for</span> j <span class=\"token keyword\">to</span> <span class=\"token namespace\">i</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">to</span> <span class=\"token number\">4</span>\n\t\t<span class=\"token keyword\">for</span> k from j<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">to</span> <span class=\"token number\">4</span>\n\t\t\t\t<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span>\n\t\tend <span class=\"token keyword\">for</span>\n\tend <span class=\"token keyword\">for</span>\nend <span class=\"token keyword\">for</span>\n\n<span class=\"token comment\">// nCr -> n개의 원소 중 r개 원소를 갖는 조합 생성</span>\ninput<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> n개의 원소를 가지고 있는 배열\nnumbers<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> r개의 크기의 배열<span class=\"token punctuation\">,</span> 조합이 저장될 배열\n\n<span class=\"token function\">comb</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">,</span>start<span class=\"token punctuation\">)</span> <span class=\"token comment\">// cnt: 현재까지 뽑은 조합 원소 개수, start: 조합 시도할 원소의 시작 인덱스</span>\n\t<span class=\"token keyword\">if</span> cnt <span class=\"token operator\">==</span> r<span class=\"token operator\">:</span>\n\t\t\t조합생성 완료\n\t<span class=\"token keyword\">else</span>\n\t\t\t<span class=\"token keyword\">for</span> i from start <span class=\"token keyword\">to</span> <span class=\"token namespace\">n</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\t\t\t\tnumbers<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> input<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\t\t\t\t<span class=\"token function\">comb</span><span class=\"token punctuation\">(</span>cnt<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t\tend <span class=\"token keyword\">for</span></code></pre></div>\n<h3 id=\"주사위-던지기-1\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%82%AC%EC%9C%84-%EB%8D%98%EC%A7%80%EA%B8%B0-1\" aria-label=\"주사위 던지기 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주사위 던지기 1</h3>\n<ul>\n<li>주사위를 3번 던져서 나올 수 있는 모든 경우 → <code class=\"language-text\">중복순열</code></li>\n<li>n𝜫r</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">첫번째 두번째 세번재\n<span class=\"token number\">6</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">216</span>가지\n<span class=\"token number\">6</span>𝜫<span class=\"token number\">3</span>주사위</code></pre></div>\n<h3 id=\"주사위-던지기-2\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%82%AC%EC%9C%84-%EB%8D%98%EC%A7%80%EA%B8%B0-2\" aria-label=\"주사위 던지기 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주사위 던지기 2</h3>\n<ul>\n<li>주사위를 3번 던져서 모두 다른 수가 나올 수 있는 경우 단 123,132,321같은 결과는 서로 다른 경우로 봄 → <code class=\"language-text\">순열</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token number\">6</span>P3 <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token operator\">*</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">120</span>가지</code></pre></div>\n<h3 id=\"주사위-던지기-3\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%82%AC%EC%9C%84-%EB%8D%98%EC%A7%80%EA%B8%B0-3\" aria-label=\"주사위 던지기 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주사위 던지기 3</h3>\n<ul>\n<li>주사위를 3번 던진 결과가 다음과 같이 중복되는 경우를 제외하고 나올 수 있는 모든 경우(112,121,211 → 중복되는 경우) → <code class=\"language-text\">중복조합</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token number\">6</span>H3 <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>C3 <span class=\"token operator\">=</span> <span class=\"token number\">8</span>C3  <span class=\"token operator\">=</span> <span class=\"token number\">56</span>가지\nnHr <span class=\"token operator\">=</span> n<span class=\"token operator\">+</span>r<span class=\"token operator\">-</span><span class=\"token number\">1</span>Cr</code></pre></div>\n<h3 id=\"주사위-던지기-4\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%82%AC%EC%9C%84-%EB%8D%98%EC%A7%80%EA%B8%B0-4\" aria-label=\"주사위 던지기 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주사위 던지기 4</h3>\n<ul>\n<li>주사위를 3번 던져서 모두 다른 수가 나올 수 있는 모든 경우 단 123,132,321와 같은 경우는 중복되는 경우로봄 → <code class=\"language-text\">조합</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token number\">6</span>C3 <span class=\"token operator\">=</span> <span class=\"token number\">30</span>가지</code></pre></div>\n<h2 id=\"부분-집합\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EB%B6%84-%EC%A7%91%ED%95%A9\" aria-label=\"부분 집합 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부분 집합</h2>\n<ul>\n<li>집합에 포함된 원소들을 선택하는 것</li>\n<li>다수의 중요 알고리즘이 원소들의 그룹에서 최적의 부분집합을 찾는 것 ex) knapsack</li>\n<li>부분집합의 수\n<ul>\n<li>집합의 원소가 n개일때 공집합을 포함한 부분집합의 개수는 2^n개 이다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">input<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> 숫자 배열\nisSelected<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> 부분 집합에 포함 <span class=\"token operator\">/</span> 비포함 여부 저장\n</code></pre></div>","excerpt":"반복과 재귀 반복과 재귀는 유사한 작업을 수행할 수 있다. 반복은 수행하는 작업이 완료될 때 까지 계속 반복 재귀는 주어진 문제의 해를 구하기 위해 동일하면서 더 작은 문제의 해를 이용하는 방법 하나의 큰 문제를 해결할 수 있는 더 작은 문제로 쪼개고 결과들을 결합한다. 재귀 함수 (recursive function) 함수에 대한 정의를 명확히  평평하게 로직을 바라보기  각 재귀의 실행을 결정하는 결정요인(값)은 로 선언한다. 종료조건 존재? 함수 내부에서 직접 혹은 간접적으로 자기 자신을 호출하는 함수  일반적으로 재귀적 정의를 이용해서 재귀함수를 구현 재귀적 프로그램을 작성하는 것은 반복구조에 비해 간결하고 이해하기 쉬움 함수 호출은 프로그램 메모리 구조에서 을 사용 따라서 재귀 호출은 반복적인 스택의 사용을 의미하며 메모리 및 속도에서 성능저하 발생  재귀 반복 종료 재귀 함수 호출이 종료되는 base case 반복문의 종료 조건 수행시간 (상대적) 느림 빠름 메모리 공간 …","frontmatter":{"date":"August 01, 2022","title":"알고리즘 기초 - 재귀함수","categories":"알고리즘","author":"sangzun","emoji":"😂"},"fields":{"slug":"/알고리즘/재귀함수/"}},"next":{"id":"0f799a0a-ae0c-5ebb-abd6-1bbda409e5f9","html":"<h2 id=\"generic\" style=\"position:relative;\"><a href=\"#generic\" aria-label=\"generic permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generic</h2>\n<ul>\n<li>다양한 타입의 객체를 다루는 메서드, 컬렉션 클래스에서 컴파일시에 타입 체크</li>\n<li>미리 사용할 타입을 명시해서 형 변환을 하지 않아도 되게함\n<ul>\n<li>객체의 타입에 대한 안전성 향상 및 형 변환의 번거로움 감소</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"generic-표현\" style=\"position:relative;\"><a href=\"#generic-%ED%91%9C%ED%98%84\" aria-label=\"generic 표현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generic 표현</h2>\n<ul>\n<li>\n<p>클래스 또는 인터페이스 선언시 &#x3C;>에 타입 파라미터 표시</p>\n</li>\n<li>\n<p>ex) public class className<T> {}</p>\n</li>\n<li>\n<p>타입 파라미터</p>\n<ul>\n<li>특별한 의미의 알파벳 보다는 단순히 임의의 참조형 타입을 말함\n<ul>\n<li>T : reference Type, E: Element, K: Key, V: Value</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>객체 생성</p>\n<ul>\n<li>변수 쪽과 생성 쪽의 타입은 반드시 같아야 함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">ClassName</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Number</span><span class=\"token punctuation\">></span></span> generic <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassName</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Number</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">ClassName</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Number</span><span class=\"token punctuation\">></span></span> generic2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassNameM</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>type parameter의 제한</p>\n<ul>\n<li>\n<p>계산기 프로그램 구현시 Number이하의 타입으로만 제한</p>\n<ul>\n<li>type parameter 선언 뒤 extends와 함께 상위 타입 명시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">NumberBox</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Number</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addSomes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> ts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">double</span> d <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> t<span class=\"token operator\">:</span> ts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\td <span class=\"token operator\">+=</span> <span class=\"token class-name\">T</span><span class=\"token punctuation\">.</span><span class=\"token function\">doubleValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"총 합은: \"</span> <span class=\"token operator\">+</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ExtendsTest</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">NumberBox</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Number</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>Generic Type 객체를 할당받을 때</p>\n<ul>\n<li>Generic type&#x3C;?> → 타입에 대한 제한 없음(Object)</li>\n<li>Generic type&#x3C;? extends T> → T 또는 T를 상속받은 타입들만 사용 가능</li>\n<li>Geneirc type &#x3C;? super T> → T 또는 T의 조상 타입만 사용 가능</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"generic-method\" style=\"position:relative;\"><a href=\"#generic-method\" aria-label=\"generic method permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generic Method</h2>\n<ul>\n<li>\n<p>파라미터와 리턴타입으로 type parameter를 갖는 메서드</p>\n<ul>\n<li>메서드 리턴 타입앞에 타입 파라미터 변수 선언</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TypeParameterMethodTest</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">T</span> some<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TypeParameterMethodTest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span> some<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>some <span class=\"token operator\">=</span> some<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">P</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">void</span> <span class=\"token function\">method1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">P</span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">P</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">void</span> <span class=\"token function\">method2</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">P</span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> p\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">TypeParameterMethodTest</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> tpmt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeParameterMethodTest</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttpmt<span class=\"token punctuation\">.</span><span class=\"token function\">method1</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\t\ttpmt<span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Long</span><span class=\"token punctuation\">></span></span><span class=\"token function\">method2</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"io와-stream\" style=\"position:relative;\"><a href=\"#io%EC%99%80-stream\" aria-label=\"io와 stream permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>I/O와 Stream</h2>\n<ul>\n<li>데이터는 한쪽에서 주고 한쪽에서 받는 구조로 되어있음\n<ul>\n<li>이때 입력과 출력의 끝단 : 노드</li>\n<li>두 노드를 연결하고 데이터를 전송할 수 있는 개념 : Stream</li>\n<li>스트림은 <code class=\"language-text\">단방향</code> 으로만 통신이 가능하며 하나의 스트림으로 입력과 출력을 같이 처리할 수 없음</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"node-stream의-종류와-naming\" style=\"position:relative;\"><a href=\"#node-stream%EC%9D%98-%EC%A2%85%EB%A5%98%EC%99%80-naming\" aria-label=\"node stream의 종류와 naming permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node Stream의 종류와 naming</h3>\n<ul>\n<li>NodeStream : node에 연결되는 스트림</li>\n<li>데이터 타입에 따라 XXStream,XXer</li>\n</ul>\n<h3 id=\"보조스트림\" style=\"position:relative;\"><a href=\"#%EB%B3%B4%EC%A1%B0%EC%8A%A4%ED%8A%B8%EB%A6%BC\" aria-label=\"보조스트림 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>보조스트림</h3>\n<ul>\n<li>Filter Stream, Processing Stream</li>\n<li>다른 스트림에 부가적인 기능을 제공하는 스트림</li>\n<li>스트림 체이닝(Stream Chaining)\n<ul>\n<li>필요에 따라 여러 보조 스트림을 연결해서 사용 가능</li>\n</ul>\n</li>\n<li>사용할 스트림의 결정 과정\n<ul>\n<li>노드가 무엇인가? → 타입은 문자열인가 바이트인가? → 방향이 무엇인가? → 추가 기능이 필요한가?</li>\n<li>영화 파일을 빠른 속도로 이동시키고 싶다면?\n<ul>\n<li>File → byte → 읽기,쓰기 → FileInputStream, FileOutputStrea</li>\n</ul>\n</li>\n<li>키보드에서 유니코드 문자를 안전하고 빠르게 읽고 싶다면?\n<ul>\n<li>keyboard → byte → 읽기 → InputStream(System.in) → InputStreamReader → BufferedReader</li>\n</ul>\n</li>\n<li>메모리의 객체를 파일로 저장하고 싶다면?\n<ul>\n<li>File → byte → 쓰기 → FileOutputStream → ObjectOutputStream</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"객체-직렬화\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%EC%A7%81%EB%A0%AC%ED%99%94\" aria-label=\"객체 직렬화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 직렬화</h3>\n<ul>\n<li>객체를 파일등에 저장하거나 네트워크로 전송하기 위해 연속적인 데이터로 변환</li>\n<li>반대의 경우는 역직렬화</li>\n<li>직렬화 되기 위한 조건\n<ul>\n<li>Serializable 인터페이스를 구현할 것</li>\n<li>클래스의 모든 멤버가 Serializable 인터페이스를 구현해야 함</li>\n<li>직렬화 해서 제외하려는 멤버는 transient 선언</li>\n</ul>\n</li>\n<li>serialVersionUID\n<ul>\n<li>클래스의 변경 여부를 파악하기 위한 유일 키</li>\n<li>직렬화 할때의 UID와 역 직렬화할때의 UID가 다를 경우 예외 발생</li>\n<li>직렬화되는 객체에 UID가 설정되지 않았을 경우 컴파일러가 자동 생성\n<ul>\n<li>멤버 변경으로 인한 컴파일 시마다 변경 → InvalidClassException 초래</li>\n</ul>\n</li>\n<li>직렬화되는 객체에 대해서 serialVersionUID 설정 권장</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"공공데이터-xml\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EA%B3%B5%EB%8D%B0%EC%9D%B4%ED%84%B0-xml\" aria-label=\"공공데이터 xml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공공데이터 XML</h2>\n<ul>\n<li>csv (comma separated value) : 용량이 작지만 구조적이지 못함</li>\n<li>XML (Extensible markup language) : 구조적,정확한 문법이 필요, 큰용량</li>\n<li>Json(javascript Object notation) : 구조를 가지며 객체로 다른 언어와 호환</li>\n</ul>\n<h3 id=\"xml\" style=\"position:relative;\"><a href=\"#xml\" aria-label=\"xml permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>XML</h3>\n<ul>\n<li>Markup Language\n<ul>\n<li>태그등을 이용하여 문서나 데이터의 구조를 명시하는 언어</li>\n<li>HTML, SGML, …</li>\n</ul>\n</li>\n<li>HTML과 달리 필요에 따라서 태그를 확장해서 사용 가능</li>\n<li>정확한 문법을 지켜야 동작 : Well formed</li>\n</ul>\n<h3 id=\"기본문법\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8%EB%AC%B8%EB%B2%95\" aria-label=\"기본문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본문법</h3>\n<ul>\n<li>문서의 시작은<code class=\"language-text\">&lt;?xml version=”1.0” encoding=”UTF-8”?></code>로 한다</li>\n<li>반드시 root element가 존재해야 한다\n<ul>\n<li>나머지 태그들은 tree 형태로 구성</li>\n</ul>\n</li>\n<li>시작태그와 종료태그는 일치해야 한다</li>\n<li>시작태그는 key-value 구조의 속성을 가질 수 있다.\n<ul>\n<li>속성 값은 “”또는 ‘’로 묶어서 표현</li>\n</ul>\n</li>\n<li>태그는 대소문자를 구분</li>\n</ul>\n<h3 id=\"valid\" style=\"position:relative;\"><a href=\"#valid\" aria-label=\"valid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>valid</h3>\n<ul>\n<li>xml 태그는 자유롭게 생성하기 때문에 최초 작성자의 의도대로 작성되는지 확인할 필요\n<ul>\n<li>문서의 구조와 적절한 요소, 속성들의 개수, 순서들이 잘 지켜졌는가</li>\n<li>DTD 또는 Schema를 이용해서 문서의 규칙 작성</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"문서의-parsing---sax\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%84%9C%EC%9D%98-parsing---sax\" aria-label=\"문서의 parsing   sax permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문서의 Parsing - SAX</h2>\n<h3 id=\"파싱\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%8B%B1\" aria-label=\"파싱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파싱</h3>\n<ul>\n<li>문서에서 필요한 정보를 얻기 위해 태그를 구별하고 내용을 추출하는 과정\n<ul>\n<li>전문적인 parser 활용</li>\n</ul>\n</li>\n<li>SAX parser\n<ul>\n<li>Simple API for XML parser</li>\n<li>문서를 읽으면서 태그의 시작, 종료등 이벤트 기반으로 처리하는 방식</li>\n</ul>\n</li>\n<li>DOM parser\n<ul>\n<li>Document Object Model</li>\n<li>문서를 다 읽고 난 후 문서 구조 전체를 자료구조에 저장하여 탐색하는 방식</li>\n</ul>\n</li>\n<li>SAX는 빠르고 한번에 처리하기 때문에 다양한 탐색이 어렵다</li>\n<li>DOM은 다양한 탐색이 가능하지만 느리고 무거우며 큰 문서를 처리하기 어렵다.</li>\n</ul>\n<h3 id=\"dom-parsing\" style=\"position:relative;\"><a href=\"#dom-parsing\" aria-label=\"dom parsing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM parsing</h3>\n<ul>\n<li>전체 문서를 읽어 tree구조를 메모리에 올려놓음</li>\n<li>여러번의 탐색 시 문서를 다시 읽어들일 필요 없음\n<ul>\n<li>재탐색 시 유리</li>\n</ul>\n</li>\n<li>여러 검색 api를 통한 다양한 탐색이 가능</li>\n<li>문서의 크기가 커지면 메모리 사용량이 늘어남\n<ul>\n<li>큰 문서를 처리하는데 불리</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"sax-parsing\" style=\"position:relative;\"><a href=\"#sax-parsing\" aria-label=\"sax parsing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SAX parsing</h3>\n<ul>\n<li>단순 한 번의 검색 시 빠르게 처리가 가능</li>\n<li>이벤트 기반의 탐색 방식\n<ul>\n<li>character 이벤트, 시작태그와 종료태그 만날 시 이벤트 발생</li>\n</ul>\n</li>\n<li></li>\n</ul>\n<h3 id=\"json\" style=\"position:relative;\"><a href=\"#json\" aria-label=\"json permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON</h3>\n<ul>\n<li>javascript Object Notation</li>\n<li>간결한 문법, 단순한 텍스트, 적은 용량으로 대부분의 언어, 대부분의 플랫폼에서 사용 가능</li>\n<li>객체를 key-value의 쌍으로 관리</li>\n</ul>\n<h2 id=\"swing\" style=\"position:relative;\"><a href=\"#swing\" aria-label=\"swing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Swing</h2>\n<ul>\n<li>Java Application에서 사용되는 GUI를 제공하는 추상적으로 정의된 도구 모음</li>\n<li>Container\n<ul>\n<li>다른 컴포넌트들은 배치하기 위한 컴포넌트</li>\n<li>Container는 다른 Container를 포함할 수 잇고 나중에 복합적인 Layout을 구성할 수 있게 한다.</li>\n<li>JFrame : 독립적으로 사용될 수 있으며 타이틀과 사이즈를 조절할 수 있는 버튼을 가짐</li>\n<li>JPanel : 반드시 다른 Container에 포함되어야 하며 복합적인 레이아웃 구성에 사용</li>\n</ul>\n</li>\n<li>다른 Component\n<ul>\n<li>JButton b;</li>\n<li>JLabel l;</li>\n<li>JTextField f;</li>\n<li>JTable table;</li>\n<li>JList list;</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"layout과-layoutmanager\" style=\"position:relative;\"><a href=\"#layout%EA%B3%BC-layoutmanager\" aria-label=\"layout과 layoutmanager permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Layout과 LayoutManager</h3>\n<ul>\n<li>Layout : Component들을 Container에 어떻게 배치할 것인가</li>\n<li>LayoutManager : Container별로 Component의 위치와 크기, 배치 방식을 결정하는 객체</li>\n<li>FlowLayout\n<ul>\n<li>JPanel의 기본 LayoutManager</li>\n<li>요소를 가로로 물 흐르듯이 배치</li>\n</ul>\n</li>\n<li>BoardLayout\n<ul>\n<li>JFrame의 기본 LayoutManager;</li>\n<li>특별한 영역, North,South,West,East,Center에 각각의 컴포넌트들을 배치한다.\n<ul>\n<li>Component들을 배치할 대는 영역을 지정(BoardLayout.CENTER or “CENTER”)</li>\n<li>사용하지 않는 공간은 크기가 0*0이 되고 Center가 기본이다.</li>\n<li>각각의 영역에는 하나의 Component들을 담을 수 있고 중복해서 담을 경우는 마지막에 담은 컴포넌트만 보인다.</li>\n<li>크기를 조절할 때 North와 South는 좌우로, East와 West는 상하로만 늘어난다. Center는 양방향</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"이벤트-처리-클래스\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%B2%98%EB%A6%AC-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"이벤트 처리 클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 처리 클래스</h3>\n<ul>\n<li>XX Listener\n<ul>\n<li>이벤트 처리에 대한 메서드들을 정의한 인터페이스로 handler는 이 인터페이스를 구현</li>\n<li>하나의 component에 여러개의 event handler를 붙일 수 있다.\n<ul>\n<li>Implements ActionListener, WindowListener</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>XX EventAdapter\n<ul>\n<li>Listener를 implements를 할 경우 사용하지도 않는 이벤트 핸들러 까지 다 구현해야 하는 단점</li>\n<li>xxxEventAdapter implments XXListener</li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"July 31, 2022","title":"자바 기초 3","categories":"JAVA","author":"sangzun","emoji":"😂"},"fields":{"slug":"/JAVA/자바기초3/"}},"prev":{"id":"fe793ae8-d08b-5d55-8f9b-d08e45f2b1fb","html":"<h1 id=\"1-알고리즘-기초\" style=\"position:relative;\"><a href=\"#1-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EA%B8%B0%EC%B4%88\" aria-label=\"1 알고리즘 기초 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 알고리즘 기초</h1>\n<h2 id=\"문제-해결-과정\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95\" aria-label=\"문제 해결 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 과정</h2>\n<ol>\n<li>문제를 읽고 이해한다.</li>\n<li>문제를 익숙한 용어로 재정의한다.</li>\n<li>어떻게 해결할지 계획을 세운다.</li>\n<li>계획을 검증한다.</li>\n<li>프로그램으로 구현한다.</li>\n<li>어떻게 풀었는지 돌아보고, 개선할 방법이 있는지 찾아본다.</li>\n</ol>\n<h3 id=\"체계적인-접근을-위한-질문\" style=\"position:relative;\"><a href=\"#%EC%B2%B4%EA%B3%84%EC%A0%81%EC%9D%B8-%EC%A0%91%EA%B7%BC%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%A7%88%EB%AC%B8\" aria-label=\"체계적인 접근을 위한 질문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>체계적인 접근을 위한 질문</h3>\n<ul>\n<li>비슷한 문제를 풀어본적 있는가</li>\n<li>단순한 방법에서 시작할 수 있을까</li>\n<li>문제를 단순화 할 수 있을까</li>\n<li>그림으로 그려 볼 수 있을까</li>\n<li>수식으로 표현할 수 있을까</li>\n<li>문제를 분해 할 수 있을까</li>\n<li>뒤에서부터 생각해서 문제를 풀 수 있을까</li>\n<li>특정 형태의 답만을 고려할 수 있을까</li>\n<li>정렬하고 풀 수 있을까</li>\n</ul>\n<p>Ex) 1부터 100까지 합을 구하는 문제</p>\n<ul>\n<li>1+2+3…+100 = 5050 (반복문)</li>\n<li>100*(1+100) / 2 = 5050</li>\n</ul>\n<h2 id=\"시간복잡도\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84\" aria-label=\"시간복잡도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시간복잡도</h2>\n<h3 id=\"최선의-경우-best-case\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%84%A0%EC%9D%98-%EA%B2%BD%EC%9A%B0-best-case\" aria-label=\"최선의 경우 best case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최선의 경우 (Best Case)</h3>\n<ul>\n<li>빅 오메가 표기법 사용 <code class=\"language-text\">big-Ω</code></li>\n<li>최선의 시나리오로 최소 x 시간이 걸림</li>\n</ul>\n<h3 id=\"최악의-경우-worst-case\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%95%85%EC%9D%98-%EA%B2%BD%EC%9A%B0-worst-case\" aria-label=\"최악의 경우 worst case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최악의 경우 (Worst Case)</h3>\n<ul>\n<li>빅 오 표기법 사용 <code class=\"language-text\">Big-O</code></li>\n<li>최악의 시나리오로 아무리 오래 걸려도 이 시간보다 덜 걸림</li>\n</ul>\n<h3 id=\"평균의경우-avaerage-case\" style=\"position:relative;\"><a href=\"#%ED%8F%89%EA%B7%A0%EC%9D%98%EA%B2%BD%EC%9A%B0-avaerage-case\" aria-label=\"평균의경우 avaerage case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>평균의경우 (Avaerage Case)</h3>\n<ul>\n<li>빅 세타 <code class=\"language-text\">big-Θ</code></li>\n<li>평균 시간</li>\n</ul>\n<p>→ 재귀의 경우 호출횟수로 계산함</p>\n<h3 id=\"p-n개의-서로-다른-데이터가-저장되어-있는-배열에서-원하는-값-x를-탐색하는-알고리즘에서의-시간-복잡도\" style=\"position:relative;\"><a href=\"#p-n%EA%B0%9C%EC%9D%98-%EC%84%9C%EB%A1%9C-%EB%8B%A4%EB%A5%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%EC%A0%80%EC%9E%A5%EB%90%98%EC%96%B4-%EC%9E%88%EB%8A%94-%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C-%EC%9B%90%ED%95%98%EB%8A%94-%EA%B0%92-x%EB%A5%BC-%ED%83%90%EC%83%89%ED%95%98%EB%8A%94-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%97%90%EC%84%9C%EC%9D%98-%EC%8B%9C%EA%B0%84-%EB%B3%B5%EC%9E%A1%EB%8F%84\" aria-label=\"p n개의 서로 다른 데이터가 저장되어 있는 배열에서 원하는 값 x를 탐색하는 알고리즘에서의 시간 복잡도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>p. n개의 서로 다른 데이터가 저장되어 있는 배열에서 원하는 값 x를 탐색하는 알고리즘에서의 시간 복잡도</h3>\n<ol>\n<li>최선의 경우 : <code class=\"language-text\">1</code></li>\n<li>최악의 경우 : <code class=\"language-text\">N</code></li>\n<li>평균적인 경우 : <code class=\"language-text\">N/2</code></li>\n</ol>\n<h2 id=\"공간복잡도\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84\" aria-label=\"공간복잡도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공간복잡도</h2>\n<ul>\n<li>메모리 사용량</li>\n</ul>","frontmatter":{"date":"August 01, 2022","title":"알고리즘 기초","categories":"알고리즘","author":"sangzun","emoji":"😂"},"fields":{"slug":"/알고리즘/알고리즘 기초/"}},"site":{"siteMetadata":{"siteUrl":"https://github.com/sangzun-han","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/알고리즘/재귀함수/","nextSlug":"/JAVA/자바기초3/","prevSlug":"/알고리즘/알고리즘 기초/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}